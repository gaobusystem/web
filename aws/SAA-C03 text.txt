+++++++++++++++++++++++++++++++++++
クラウド　デプロイモデル
++++++++++++++++++++++++++++++++++

IaaS(Infrastructure as a Service) （イアース / アイアース）ネットワークやストレージを含むサーバー機能を提供するサービス 例)EC2 S3
PaaS (Platform as a Service) （パース）OSやミドルウェア、ランタイムなどのアプリケーション実行環境を含むプラットフォームを提供するサービス
                             例)RDS
SaaS (Software as a Service) 「サース」アプリケーションを含むすべての機能を提供するサービス

+++++++++++++++++++++++++++++++++++
アベイラリティゾーン(AZ)
++++++++++++++++++++++++++++++++++
リージョン
　複数のAZ（最低３つ）とトランジットセンタで構成

トランジットセンタ
　インターネット、AWS　Direct　Connect、別リージョンとの結節点として機能

エッジロケーション
　CDN
　全世界に600か所以上に設けられているため、世界中にユーザーに近い距離でレスポンスを返す

▲AWS Local Zone
  人口の多い場所、エリアに配置されたインストラクチャ、別サービス

AZは１つ以上のデータセンターであり、論理的データセンターのグループ
	データセンターには、AWSのクラウドサービスを提供する実際のサーバーが置かれ
	ている

リージョン　＞　アベイラビリティゾーン（AZ）　＞　データセンター

▲▲AZは１つのサブネットと紐づいているため、１つしかサブネットがないと、２つのazは利用できない[本当？？]

▲リージョン　＞　アベイラビリティゾーン（AZ）　＞　サブネット（パブリック、プライベート）
+++++++++++++++++++++++++++++++++++
一般的な設計原則
++++++++++++++++++++++++++++++++++

 「一般的な設計原則」と、6本の柱である「信頼性」「セキュリティ」「パフォーマンス効率」「コスト最適化」「運用上の優秀性」
 「持続可能性」があります。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Well-Architected Frameworkの「パフォーマンス効率」を実現するための設計
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
「パフォーマンス効率」の設計原則の一つは、「サーバーレスアーキテクチャを使用する」です。
「パフォーマンス効率」の設計原則の一つは、「より頻繁に実験する」です。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Well-Architected Frameworkの「コスト最適化」を実現するための設計
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
「コスト最適化」の設計原則の一つは、「付加価値を生まない高負荷の作業に費用をかけない」です。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Well-Architected Frameworkの「セキュリティ」を実現するための設計
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
「セキュリティ」の設計原則の一つは、「セキュリティのベストプラクティスを自動化する」です。
セキュリティの仕組みをソフトウェアベースで自動化することによって、安全にシステム化を迅速にしつつコスト効果を
高くします。
例えば、EC2インスタンスに最新のセキュリティパッチを適用してからAMIを作成することで、AMIから新規に起動するECイン
スタンスは自動的にセキュリティ対策済みになります。
セキュリティの設計原則は以下の7つです。
・強力なアイデンティティ基盤を実装する … 最小権限の原則を実装し、AWSリソースの使用に適切な認証をします。
　　　　　　　　　　　　　　　　　　　　　最小権限の原則とは、ユーザーやプログラムが作業を完遂するために必要な
　　　　　　　　　　　　　　　　　　　　　最低限の権限で操作を行うことです。
・トレーサビリティを実現する … システムに対してリアルタイムでの監視、通知、監査を行うことにより、問題が発生
　　　　　　　　　　　　　　　　　した場合に素早く対応できます。
・転送中および保管中のデータを保護する … データの機密性レベルに応じた、暗号化、トークン分割、アクセスコント
　　　　　　　　　　　　　　　　　　　　　ロールなどを適用します。
・セキュリティイベントに備える … システムの要件に合わせたインシデント発生後のプロセス（検出、調査、復旧）と
　　　　　　　　　　　　　　　　　インシデント管理の方針を決めて、セキュリティイベントに備えます。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Well-Architected Frameworkの「信頼性」を実現するための設計
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
「信頼性」の設計原則の一つは、「障害から自動的に復旧する」です。
「信頼性」の設計原則の一つは、「キャパシティーを推測しない」です。
システムの使用率を監視してリソースの追加や削除を自動化することにより、需要に対して常に適切なキャパシティーで
運用できます。
例えば、EC2インスタンスで空きメモリが不足してパフォーマンスに問題が発生しても、インスタンスタイプを一つ上の
クラスに変更することで簡単にスケールアップが実現できるので、サービス開始当初は予算に応じたサイズから開始し、
▲需要に応じてスケールアップする前提で設計します。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Elastic　ComputeCloud（Amazon　EC2）★★★
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
アンマネージド型
EC2インスタンスはユーザーが選択したAmazon マシンイメージ（AMI）を元に作成されます。
AMIに含まれないサーバー固有のOSの設定や、ミドルウェアの導入は個別に実施する必要があります。

運用管理が必要
　　マネージドサービスでなく、各種設定やOSのパッチ適用等ユーザー側で行う

Amazonマシンイメージ(AMI)
　EC2インスタンスを起動するうえで必要な情報を含んだルートボリュームのテンプレート

・HPC最適化 Hpc
　　プロセッサ・ネットワーク帯域・計算負荷の高パフォーマンス

インスタンスタイプの名称

　M5ad.sxlarge
　M　インスタンスタイプ
　5　インスタンス世代
　sxlarge　インスタンスサイズ


◆◆インスタンスファミリー
　　インスタンスタイプの用途別の分類です。
　　　・一時的にCPUの高負荷が発生する小中規模のサーバーは「T」ファミリーを選択する。汎用的なサーバー
　　　・高いディスクスループットを必要とするサーバーは「I」ファミリーを選択する
　　　・「P」ファミリーは高速コンピューティングのインスタンスファミリーです。
コンピューティング最適化「C」
メモリ最適化「R」、
高速コンピューティング「P」

複数のアカウント間でAMIを共有するには、AMIを別のアカウントと共有するための許可設定が必要となります。
そのためには、AMIを第三者のAWSアカウントとのみ共有できるようにAMIの▲LaunchPermissionプロパティを変更することが必要です。

セキュリティグループを設定する際は、CIDR（サイダー）を指定してIPアドレス範囲を設定するか、別のセキュリティグ
ループIDを設定することができます。
EC2インスタンスのWEBサーバーにおいてAuto Scalingを設定している場合は、Auto Scalingグループと既存のEC2インス
タンスに利用されているセキュリティグループを統一した上で、そのセキュリティグループIDをDB側のセキュリティグル
ープに設定する方が最適です。
そうすることで、Auto Scalingによって新規にインスタンスが起動した場合もDBにDBへのアクセスが許可されたセキュリ
ティグループが適用されるため、DBへの通信が自動的に許可されるようになります。

セキュリティグループは、VPC上でネットワークアクセスをインスタンスごとに制御するファイアウォールです。
セキュリティグループでは送信元や宛先にIPアドレスの範囲を指定する他、別のセキュリティグループも指定できます。

ライフサイクルフックは、スケーリング発生によるEC2インスタンスの起動または終了時に任意の処理を実行する機能です。
例えば、スケールアウト（リソースの増加）によって新たに追加したインスタンスに初期化スクリプトを実行させたり、
スケールイン（リソースの削減）によって終了するインスタンスのログを収集・退避させるといった処理を行えます。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　EBS
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
EC2インスタンスにアタッチして使用することができる▲ブロックストレージ。


◆インスタンスストア
　　インスタンス起動時のみ保持。停止で消える
　　EC2インスタンスの料金に含まれている
　　インスタンスストアは、EC2インスタンスの内部ストレージとして利用できる揮発性の（インスタンス稼働中にだけ利用可能な）
　　▲ブロックストレージです。
　　ホストコンピュータに物理的に割り当てられたディスク上にあり、頻繁に変更されるデータの一時的な保存領域として一部の
　　インスタンスタイプで使用できます。

購入オプション
　オンデマンドインスタンス
　　　時間単位もしくは秒単位で料金支払い

　リザーブドインスタンス（RI）
　　　１年もしくは３年の長期契約。最大72％割引

　Savings　Plans
　　　RIより柔軟な利用が可能・

　スポットインスタンス

　　　◆オプションであるスポットフリート
　　　　　必要なインスタンス数を指定することで、指定した数のスポットインスタンスが起動します。
　　　　　スポットインスタンスが中断されて必要なインスタンス数を下回った場合、自動的にインスタンスを補充してインスタンス数を維持します。
　　　　　補充されるインスタンスにはオンデマンドインスタンスも含まれます。

◆◆オンデマンドキャパシティー予約
 スケジュールドリザーブドインスタンス【利用不可】は日次、週次、月次と３パターンのスケジューリングされた利用に適した購入方法であり、
 定期的なインスタンス利用には[スケジュール]ドリザーブドインスタンスを利用することが最適でしたが、AWSでの利用ができなくなりました。!!!
 そのため、代わりに ◆オンデマンドキャパシティー予約 を使用して、インスタンス利用期間を予約することができます。

 オンデマンドキャパシティー予約 を使用することで、特定のアベイラビリティーゾーンで任意の時間におけるEC2 インスタンスの
 キャパシティを予約できます。その間は対象のインスタンスタイプの起動が保証されます。

◆プレイスメントグループ
　　複数のEC2インスタンスを論理的にグループ化し、インスタンス間での低遅延な通信や、ハードウェア障害による影響を軽減できる機能

　　◆クラスタプレイスメントグループ
　　　　１つのＡＺ内のインスタンスを論理的にグループ化し、【EC2インスタンス同士を近い距離に配置】
　　　　クラスタープレイスメントグループが所属するAZに何らかの障害が発生した場合はサービスが利用不能になってしまうため、
　　　　可用性を犠牲にしてでもEC2インスタンス間の通信遅延を極力なくしたい場合に利用します。
　　　　【HPC向き】

　　◆パテーションプレイスメントグループ
　　　　異なるセグメントに配置。分散。障害対策
　　　　大規模な分散および複製ワークロードを必要とするHDFS,HBase,Cassandraなどのでの使用に向いています
　　　　グループをパーティションとよばれる論理グループに分割し、▲それぞれのパーティションに1つ以上のEC2インスタンスが所属します。
　　　　▲各パーティションは1つのラックが対応しており、ラックには独立した電源とネットワークが配備されています。
　　　　グループ内の各パーティションはラックを共有しないので、ハードウェア障害による影響を軽減します。

　　◆◆スプレッドプレイスメントグループ
　　　　１つのＡＺ内のインスタンスを▲異なるハードウエアに配置
　　　　重要なEC2インスタンスを互いに分離して保持する　例）医療記録システム
　　　　スプレッドプレイスメントグループは、グループ内のEC2インスタンスを異なるハードウェア（ラック）に配置します。
        グループ内のEC2インスタンスがハードウェアを共有しないように配置
　　　　パーティションプレイスメントグループではラック内に同一グループのEC2インスタンスを1つ以上配置しますが、
　　　　スプレッドプレイスメントグループは▲同一グループのEC2インスタンスを1つしか配置しません。
 

　　　　グループ内の各EC2インスタンスはハードウェアを共有しないので、ハードウェア障害による影響を軽減します。


専用インスタンス

〇Amazon EC2のインスタンスを終了する際は、EC2はインスタンスに接続されていたEBS ボリュームの ▲DeleteOnTermination 属性に基づいて、
〇そのボリュームを存続させるべきか、一緒に削除すべきかを判断します。


◆Dedicated Hosts（専有ホスト）
他のEC2インスタンスとは分離された専用ハードウェアで利用できる購入オプションです。
物理的なCPUソケット、コア数、ホストIDを確認する必要がない場合、ハードウェア専有インスタンスの方が低価格で利用できる

◆[EBSのボリュームタイプ]
・汎用SSD（gp3）
・スループット最適化 HDD（st1）シーケンシャル読み、ビックデータ
・Cold HDD（sc1）　　利用頻度低
・プロビジョンドIOPS SSD　高速

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　EC２　AUTO　Scaling　★★★
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

・起動テンプレート
　　どんなEC２を起動するか
　　-　AMI
　　-　インスタンスタイプ
　　-　キーペア
　　-　セキュリテイグループ　等

・AutoScalingグループ
　　どこにいくつ起動するのか
　　２つのリージョンに拡張することはできない

・◆AutoScalingポリシー
　　いつ増減させるか
　　◆動的ポリシー
　　　　◆ターゲット追跡ポリシー
　　　　　　特定のメトリクスが指定した目標値になるように、インスタンスを増減します。増減するインスタンス数はAWS側で調整されます。
　　　　　　例：平均CPU使用率が30％になるようにインスタンス数を調整する
　　　　◆シンプルスケーリング
　　　　　　特定のメトリクスに対する1つのしきい値に基づいて、インスタンスを増減します。
　　　　　　例：300秒間の平均CPU使用率が50％を超えたら、インスタンスを1台追加する
　　　　◆ステップスケーリング
　　　　　　ステップ1.300秒間の平均CPU使用率が50％を超えたら、インスタンスを1台追加する
　　　　　　ステップ2.300秒間の平均CPU使用率が90％を超えたら、インスタンスを2台追加する 
　　◆予測ポリシー
　　　　過去14日間（初期値）の情報をもとに、曜日、時刻などの定期的パターンを予測
　　◆スケジュール
      需要が高まる少し前にキャパシティを増やし、需要が減少したあとにキャパシティを減らす

Desired capacity（希望する容量）はAuto Scalingによって現在起動するべきインスタンス数を規定するAuto Scalingグループ内の現在起動するべきインスタンス数の設定です。
この数値に従ってインスタンス数が増減します。Auto Scalingグループでは最小キャパシティと最大キャパシティの間に希望する容量（Desired capacity）を調整することができます。
この調整はスケーリング設定の編集画面において、手動で変更することが可能です。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　Elastic　Beanstalk　★★☆
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

〇AWS Elastic Beanstalk は、アプリケーションが動作する定番の構成を提供します。
▲環境が構築された後も、運用管理などはAWSによって行われます。
例えばWebアプリケーションやOSへのアップデートは自動で行われるようにし、常に最新のバージョンに保つことができます。

Elastic BeanstalkはDockerに対応しているため、作成済みのDockerfileをElastic Beanstalkへアップロードすることで、
EC2インスタンスやWebアプリケーション等の準備を行うことなくコンテナを稼働させることができます。
なお、コンテナが動作する環境はElastic Beanstalkによって管理されますが、コンテナ上の環境（コンテナにインストールしたソフトウェアなど）は自分で管理する必要があります。
◆実現可能なものはどれか。
ｘOSにCentOSを採用する　　＊選択可能なOSはAmazon LinuxまたはWindows Serverです
ｘデータベースサービスにRedshiftを採用する
〇OSやWebアプリケーションを常に最新のバージョンに保つ

また、◆Elastic Beanstalkは、Blue/Greenデプロイメント（環境を切り替えること）が容易に実行できます。
Blue/Greenデプロイメントは、旧環境を稼働させながら新環境にバージョンアップしたアプリケーションをデプロイし、
動作確認後に旧環境と新環境のURLをスワップする（切り替える）ことで実現できます。

AWS BATCH

　　コンピューてぃんぐリソースとして、コンテナが使用されます。コンテナ化が難しい処理などはAWS　ParallelClusterがおすすめ

AWS　Lambda

　Lambda関数は◆最大10GBまでのデータ容量を扱うことができます。
「AWS ParallelClusterとEFAを利用したMessage Passing Interface（MPI）ライブラリを使用して、ハイパフォーマンスコンピューティング (HPC) クラスターを
  デプロイする。」
 他のAWSリソースと連携するLambdaファンクションを作成する際は、IAMによる実行ロールをLambdaファンクションに設定してアクセス権限を付与する
 ことが必要です。 このIAMロールに付与されたアクセス権限によって、Lambdaファンクションが操作できるAWSリソースの範囲が決まります。

しかしながら、▲関数 URL(Function URLs) という新機能が実装されたため、API Gatewayを省略してパブリックに公開するAPIや、
簡易な認証実装でも差し支えの無いAPIを AWSLambdaで実装することができます。

AWS　ParallelCluster
　　AWS　ParallelClusterを使用すると、概念実証および本番稼働のHPCコンピューティング環境を迅速に構築してデプロイできます。
　　必要なコンピューティングリソース、スケジュラ、共有ファイルシステムが自動的に設定されます。

+++++++++++++++++++++++++++++++++++++++++++++
◆EFA(Elastic Fabric Adapter)
+++++++++++++++++++++++++++++++++++++++++++++
Elastic Fabric Adapter (EFA)は、AWSが提供する高性能なネットワークインターフェースで、科学研究、工学、機械学習などの高パフォーマンスを要求する
計算タスクに最適です。ネットワークインターフェイス作成時にEFAを有効化し、EC2インスタンスにアタッチして利用します。
EFAは、通常のENIと比較してネットワークの遅延を最小限に抑え、高いデータ転送速度を実現できます。
なお、EFAは特定のEC2インスタンスタイプでのみサポートしています。

+++++++++++++++++++++++++++++++++++++++++++++
AWS　Simple　Storage　Service　（S3）★★★
+++++++++++++++++++++++++++++++++++++++++++++

◆オブジェクトには１つあたり５TBまでという制限がある

少なくとも３つのAZにまたがる複数のデバイスに保存

S3 バケットを作成すると暗号化がデフォルトで有効化されます。
各アクセスログファイルはS3 バケットに保存される前に自動的に暗号化され、アクセス時に復号されます。
その際は、S3バケットに保存されるアクティビティログなどのログも自動で暗号化されるため、S3バケットの暗号化に加えて、さらに設定する必要はありません。

コスト
　S3　＜　EBS　＜　EFS

バスケット
　S3におけるコンテナの保存場所
　オブジェクトを保存するとき、特定の１つのバスケットを指定する必要がある

　１つのAWSアカウントに１００個までバスケットを作成することができます

プレフィックス
　オブジェクトはパケット内では階層構造はなく、フラットに格納されます
　プレフィックスを使用することにより、仮想的な階層構造を指定することができます


Amazon S3 Glacier ボールトロック
　ボールトに対してポリシーを適用

アクセスコントロールリスト（ACL）
　◆パケットポリシーのみでアクセス制御ができるため、ACLを無効化することが推奨されています

ブロックパブリックアクセス
　ブロックパブリックアクセスにより、バスケット、アクセスポイント、およびオブジェクトに対するブロックアクセスを
　防止する
　誤った設定をしてしまい、予期せぬオブジェクトを公開することを防ぐ

アクセスポイント
　◆現在は各アクセスポイントに対し、アクセスポイントポリシーを設定できるため、アクセス制御をシンプルに行うことができる
　従来は１つのパケットポリシーで複数のアクセス制御を行っていたため、ポリシーの記述が複雑でセキュリテイインシデントの発生につながった

イベント通知
　送信先は１か所のみ

◆クロスリージョンレプリケーション
　異なるAWSリージョン内のS3パケット間でオブジェクトを自動的にレプリケートする機能
　S3クロスリージョンレプリケーションを設定すると、S3バケットにオブジェクトが作成・更新・削除された際のイベントをトリガーとして、
　別のS3バケットに対してオブジェクトデータのレプリ ケーションが実行されます。
　クロスリージョンレプリケーションは、異なる２つのバケット間でオブジェクトを自動的に非同期にコピーする機能です。
　クロスリージョンレプリケーションは異なるAWS アカウントが所有するバケットに対しても設定できます。 

Amazon　S3　Object　Lambda
　
Amazon　S3　イベントリ

S3標準ー＞S3標準IAー＞S3　1ゾーンーIA(One-Zone-IA)ー＞
S3Glacier Instant(数ﾐﾘ) -> S3Glacier Flexible(数分) -> S3Glacier Deep(12h)

「S3 One Zone-IA（S3 One Zone-Infrequent Access：S3 1ゾーン-低頻度アクセス）」はデータが1ヵ所のAZのみに保存される

◆S3 Intelligent-Tiering
　Amazon S3のストレージクラスのうち、アクセス頻度が予測不能なデータを保存する際に適している


◆署名付きURLを使用して、各ユーザのブラウザからS3に画像を直接アップロードすると、web　APIサーバ経由よりパフォマンス向上
S3の通知イベント機能を使ってLamdaを呼び出すことで、ユーザのリクエストに対して即時対応が可能になる

有効期限はデフォルトで60分

マルチパートアップロードはS3に大きなファイルをアップロードする際に利用する機能
◆S3バケットに保存できるオブジェクトの最大サイズは5TBですが、一度にアップロードできる最大サイズは▲5GBです。
5GBを超えるファイルをアップロードするには「マルチパートアップロード」を利用します。

・結果整合性モデル： 結果整合性モデル はデータの更新でデータベースがロックされることはないため、
　可用性とスケーラビリティを維持することができます。 
　その代わり、データ更新時に読み取りリクエストが発生した場合は、データの整合性が担保されません。

このシナリオでは、Amazon S3バケットに保存される新しいドキュメントは保存後に変更も削除もできないようにすることが求められています。

・Amazon S3バケットの初期設定でデータが削除されないS3バケットをロックする。
・Amazon S3バケットにMFA Delete機能を適用して、ユーザーによるデータ削除時にMFA入力を必須化して、誤った削除を防止する。
・S3オブジェクトロックのコンプライアンスモードを有効にしたS3バケットを作成して、その中にドキュメントを保存する。

◆コンプライアンスモードは、新規作成でなくても、後からモードを変更できる。

MFA Deleteは、S3のバージョニング機能を使用して管理されているオブジェクトを削除する際に、MFAデバイスの認証が必要となる機能です。

MFA Deleteを利用すると、ルートユーザー（AWSとの契約を行ったアカウント）のみが、世代管理されたデータの削除権限を持つようになります。

◆S3のACL（アクセスコントロールリスト）は、AWSアカウント単位でアクセス権限を設定する機能です。
他のAWSアカウントに対して、オブジェクトもしくはバケットへの読み取り/書き込みを許可します。
アクセス元のIPアドレスやドメイン単位でのアクセス制御はできない

◆バケットポリシー
バケット単位でアクセス権限を設定する機能です。アクセス元のIPアドレスやドメイン単位でのアクセス制御ができる

◆ユーザーポリシー
IAMユーザー単位でアクセス権限を設定する機能です。
自AWSアカウントのIAMユーザーやグループ、ロールに対して、S3リソースへのアクセス権限を設定します。
また、アクセス元のIPアドレスやドメイン名によるアクセス制御もできます。


S3バケットは初期設定ではオブジェクトロックによってオブジェクトを削除できない設定が可能ですが、これはバケット作成時にのみ利用可能です。
既に利用しているS3バケットのオブジェクトロック設定を変更することはできません。


Amazon S3バケットの暗号化には「S3管理キー」と「AWS KMS管理キー」と「ユーザー管理のキー」の3つの暗号化キーを利用することができます。
そして、キーの操作権限を有した上で、運用の手間をできる限り減らすという要件に合致するのは、「AWS KMS管理キー」となります。
暗号化キーをロギングするためにもAWS KMS管理キーを利用することで、CloudTrailによるキーへのアクセスログを管理することができます。

◆S3バケットの▲クロスアカウントアクセスを有効化して、S3バケットの▲リクエスタ支払い機能を有効化することで、
ヨーロッパの企業の有するAWSアカウントからのS3バケットへのアクセスを許可した上で、データ取得のコストをヨーロッパ企業側に支払わせることができます。

◆S3 Access Analyzer は、AWS アカウントの外部からアクセスできるリソースを特定する総合的な解析結果を生成します。
S3バケットに対する外部アカウントからのアクセス情報を分析して、不正なアカウントアクセス設定がないかを確認することができます。

S3イベント通知
　バスケット内イベントの発生をトリガーにして、SNS・SQS・Lambdaに通知設定が可能
　Amazon S3 のイベント通知設定では、以下のAWSサービスを指定します。

　・Amazon Simple Notification Service (Amazon SNS) のトピック
　・Amazon Simple Queue Service (Amazon SQS) キュー
　・AWS Lambda 関数
　・Amazon EventBridge
　ｘKinesis Data Firehose▲

Amazon S3 SelectはシンプルなSQLステートメントを使用してAmazon S3オブジェクトのコンテンツをフィルタリングし、必要なデータのサブセットのみを取得できます。 

S3バケットの静的WEBホスティングにおいて、HTMLオブジェクトにアクセスする際に、オブジェクトの読み取りアクセス許可が付与されていない場合は、
ウェブサイトエンドポイントから HTTP レスポンスコード 403 (Access Denied) が返されます。

S3バケットを利用した静的ウェブサイトを構築するためには、S3バケットにおいて静的ウェブホスティング機能を有効化します。
次にIndex.htmlを設定することでWEBサイトの設定が完了します。
さらに、このWEBサイトを一般的なユーザーに表示させるためには、インターネットからのアクセスが許可される設定が必要となります。
◆そのためには、パブリックアクセスブロックを無効化することと、
　バケットポリシーの設定によってインターネットからバケットへのs3:GetObject を許可する設定が必要です。

◆オブジェクトロックには、保持期間が無期限の「リーガルホールド」と、期限付きの「リテンションモード」の2種類があります。*リテンション（retention）とは、「維持」「保持」
リーガルホールドは、権限（s3:PutObjectLegalHold）を持たないユーザーに対して、リーガルホールドが解除されるまでオブジェクト
を読み取り専用にします。権限を持つユーザーのみオブジェクトの更新・削除と、リーガルホールドの解除ができます。
一方、リテンションモードは保持期間を指定します。

更新・削除を制限する対象によって「ガバナンスモード」と「コンプライアンスモード」に分かれており、どちらかを選択します。
ガバナンスモード
　権限（s3:BypassGovernanceRetention）を持たないユーザーに対して、指定した保持期間中オブジェクトを読み取り専用にします。
　権限を持つユーザーのみオブジェクトの更新・削除と、ガバナンスモードの解除ができます。

コンプライアンスモード
　ルートユーザーを含む全てのユーザーに対して、指定した保持期間中オブジェクトを読み取り専用にします。
　保持期間中はルートユーザーを含めてコンプライアンスモードを解除できません。

S3 Glacierストレージクラスに保存されているデータを「アーカイブ」といいます。
「S3 Glacier Flexible Retrieval」と「S3 Glacier Deep Archive」に保存されているアーカイブは直接ダウンロードできないので
「復元リクエスト」を行い一旦S3バケットに取り出します。
データの取り出しには復元リクエストが必要で、データ量に応じた料金がかかります。
大容量のデータを取り出す場合は、復元リクエストに大容量（バルク）取り出しオプションを適用すると、
標準取り出しより時間がかかりますが取り出し料金が低価格になります。ペタバイト単位のデータを1日かけて取り出します

+++++++++++++++++++++++++++++++++++++++++++++
AWS　Elastic　Block　Store　（Amazon　EBS）★★★
+++++++++++++++++++++++++++++++++++++++++++++

暗号化済み、暗号化なしを指定することができます

EBSスナップショット

　特定時点でのバックアップ
　非同期処理
　アプリケーションやＯＳなどでキャッシュされている変更データは対象外。
　増分バックアップになる
　
◆バージョン管理が必要な場合は、Amazon　Data　Lifecycle Manager (Amazon DLM) を使用する
　DLMではEBSのバックアップであるスナップショットの作成、保存、削除を自動化するスケジュールを設定することができます。
　（EBSでスナップショットを取得すると、そのデータは自動でAWSが管理するS3バケットに保存されることになります。）

EBSマルチアタッチ機能

　マルチアタッチはプロビジョンIOPS SSDボリュームのみサポートされています

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　Elastic　File　System　（Amazon　EFS）★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆◆linuxユーザー　ファイルストレージ

フルマネージド
ファイルストレージの管理なしに、ユーザは複数のEC2インスタンスと、オンプレミスのサーバからもアクセスできるファイルシステム

LinuxのNFSプロトコル

アクセスパターンが変化するファイルにはEFS　IntellingentーTieringを使用する

Amazon EFS は標準ストレージクラスと低頻度アクセスストレージクラス (EFS IA) という２つのストレージクラスを利用しています。
◆EFS IA は、毎日アクセスしないファイルに対して最適化されたコスト効率の料金/パフォーマンスを提供します。
ファイルシステムは EFS ライフサイクル管理を有効にするだけで、選択したライフサイクルポリシーに従ってアクセスしないファイルは、
自動的かつ透過的に EFS IA に移されます。

Amazon EFS は、幅広いワークロードに対応するために必要なスループット、IOPS、および低レイテンシーを
提供できるように設計されており、汎用と最大 I/O の 2 種類のパフォーマンスモードを提供します。
汎用モードの方が低レイテンシー
保存したデータ量に伴ってストレージサイズが自動的にスケーリングする
データの整合性を保つためにファイルに対するロック機構（排他制御）が使用されている

[デフォルトで有効]
◆自動バックアップ
◆保管されているデータの暗号化
ｘインスタンス終了時のEFS上のデータ破棄
ｘ転送中のデータの暗号化

◆[スループットモード]
・特定の時間帯に一時的に負荷が高くなるような場合は、「バーストスループットモード」が適している
・データ量は少ないがアクセス頻度の多い場合は、「プロビジョンドスループットモード」が適している
- バーストスループットモード ... ストレージの容量に従ってベースライン性能（基本性能）が設定され、一時的に負荷が高くなった場合はベースライン性能の2倍まで
                                 性能向上できる
- プロビジョンドスループットモード ... ユーザーが予約した（provisioned）性能をAWSが保証してスループットを提供する

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　FSx　for　windows file server　★★★　windowsユーザー　ファイルストレージ
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
フルマネージド
Amazon FSx for Windows File Serverは、◆SMBプロトコル(※)を使用してWindows Server（OS）上に構築されたファイルシステムを
提供するフルマネージドのファイルストレージサービスです。
Active　Directoryと統合されており、ユーザーアクセスの管理が容易

＊ボリュームゲートウェイはS3をiSCSI接続のブロックストレージボリュームとして利用できるサービスです。
＊FSx for Windows File Serverには対応していない
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　FSx　for　Lustre　★★★　ファイルストレージ
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Lustre (ラスター) は、一般に大規模のクラスターコンピューティング・スーパーコンピュータで使用されている
分散ファイルシステムである。

並列アーキテクチャを使用しており、複数のノードでデータを同時に処理できる

◆Lustre は世界最速のコンピュータ向けに設計された、オープンソースの高性能なファイルシステムです。
速度が重要なワークロードには Lustre を使用します。

Lustreクライアント
◆Amazon FSx For Lustreの特徴の一つに「Amazon S3との連携」があります。S3バケットをFSx for Lustreファイルシステムに統合すると、
ファイルシステムとS3バケット間でデータを自動的にインポートおよびエクスポートします。
これにより、S3に保存されているデータをFSx for Lustreから透過的に利用できるようになります。
◆高頻度アクセスのデータをFSx For Lustre上に配置し、アクセスしないデータはAmazon S3へ保存する

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon FSx for NetApp ONTAP
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆◆◆NFSとSMBの両プロトコルをサポートするマネージドストレージである

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　Backup　★★☆　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
〇フルマネージドのバックアップサービス

バックアップボールド
　AWS　BACKUPにてバックアップを保存および整理するためのコンテナのこと

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Storage Gateway　★★☆　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Storage GatewayはAmazon S3バケットとオンプレミスストレージを接続して、バックアップを取得したり、
ストレージ容量を拡張したりすることができるハイブリッドストレージを構成する機能を提供しています。

ボリュームゲートウェイ
　　iSCSI（Internet Small Computer System Interface）接続を使用して▲オンプレミスのブロックデータをS3に保管するサービスです。
　　◆◆◆ファイルベースのプロトコル（例：NFS、SMB）には対応していない

		キャッシュ型ボリュームゲートウェイ
		　　　プライマリーはS3
		　　　頻繁にアクセスするデータはオンプレミス環境にキャッシュを保持する

		保管型ボリュームゲートウェイ
　　　　　すべてのデータをオンプレミスのボリュームストレージに保存し、非同期でS3にバックアップします。
		　　　プライマリーはオンプレストレージ
		　　　プライマリーはローカル保存する一方で、そのデータを非同期にS3にバックアップ

ファイルゲートウェイ

　　ファイルゲートウェイは、Lustreクライアントから接続するAWS上の共有ストレージは作成できません。
　　◆オンプレミスから▲NFSまたはSMBを使用してS3バケットへアクセスできるサービスです。
　　◆既存のWindows Server等に手を加えずに低コストでAWSへ移行するには、ボリュームゲートウェイでなく、
　　同じSMBプロトコルを使用してファイル共有を行う▲S3ファイルゲートウェイを使用します。
　　ローカル（オンプレミス）にキャッシュストレージを持つため低レイテンシでのアクセスも可能です。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　Vitual　Private Cloud(VPC)　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
VPC内のリソースに、インターネットから通信するには、インターネットゲートウエイ(IGW)とルートテーブルが必要です。

ルートテーブルには、VPCのプライベートIPアドレスに対するルートが記載されている
ここにIGWへのルートを記載することで、インターネットに通信できる（パブリックサブネットになる）

〇IGWへのルートが記載されていないルートテーブルがアタッチされたプライベートサブネット内のリソースは直接
〇インターネットと通信することはできません。
〇NATゲートウエイ(NATGW）を使えば可能

◆IGWはVPCに１つ存在し、NATGWはAZごとに作成できる

◆仮想プライベートゲートウエイ(VGW) 　　VPCとオンプレミスネットワークの出入り口

◆カスタマーゲートウエイはオンプレミスネットワーク側のVPN終端装置となるルータやFWを指します

〇Direct ConnectとSite-to-Site VPNはVPCとオンプレミスをセキュアに接続する機能

Direct Connect
〇　オンプレミスなどのユーザー環境からAWSへ、専用回線を使ってセキュアに接続するサービス
　オンプレ拠点からDirect Connectロケーション（データセンター）までの回線は提供しない
　数週間から数か月かかる
　Direct Connectエンドポイントと仮想プライベートゲートウェイ（VGW：Virtual Private Gateway）を1対1で接続するので、
　通常は1つのVPCにしか接続できません

AWS Direct Connectの利用料金には2つの要素があります。
　1つ目は「ポート時間」で、Direct Connectロケーション内で契約しているネットワーク機器の利用時間に対して料金が発生します。
　　　　　Direct Connectを契約している間はデータ転送有無にかかわらず常に一定の料金がかかります。
　2つ目は「データ転送アウト」で、AWS内からDirect Connect経由でAWS外へ送信されるネットワークトラフィック量に対して料金が発生します。
　　　　　Direct Connectのデータ転送アウトで発生する料金は、インターネットを経由したデータ転送料金よりも安価に設定されています。

Site-to-Site VPN
　AWSが提供するカスタマーGW用の設定テンプレートをダウンロードし、ルータなどに設定を施すことで
　カスタマーGWとVGWの間に冗長化されたVPN接続を構成する

◆VPCピアリング接続
　▲VPCとVPCを一対一で接続するための機能
　インターネットを経由せずに通信可能。通信するVPC同士でIPアドレスのレンジは重複できません
　複数のVPCを相互に接続したい場合は、フルメッシュ（多対多で交信可能）での接続が必要です。
　単一障害点を持たず、帯域幅のボトルネックは存在しません
　異なるリージョンのVPCや他のAWSアカウントのVPCでも、同一のプライベートネットワーク内に存在しているかのように、相互に通信できます。

＊VPCとサブネットのCIDRブロックは、/16から/28のプレフィックス長で指定する必要がある

◆AWSトランジットゲートウェイ（TGW）
　複数のVPCやオンプレミスネットワークを接続するハブを設けるための機能です
　TGWのルートテーブルで一元管理するため、管理が容易

VPC内のリソースとVPC外のリソースの通信（VPCエンドポイント、AWS PrivateLink）

   VPC内のリソースとVPC外のリソースに対してIGWを経由しないで通信するためには、VPCエンドポイントが必要です

　ゲートウエイエンドポイント（GWエンドポイント）　無料
　　◆IGWに似たようなもの。VPCに対して１つ作成。S3とDynamoDbのみが使用
　　オンプレや別のAWSリージョンから直接通信不可

　インターフェイスエンドポイント（AWS PrivateLink）　有料
　　Elastic Network Interface(ENI)と似たような位置づけ。
　　◆サブネットに対して１つ作成し、通信する際はルートテーブルに対するルートの追加は必要ありません
　　すべてのサービスで使用可能
　　オンプレや別のAWSリージョンから直接通信可

NATGW(NATゲートウェイ)

VPCエンドポイント
　　IGW、NATGWを作成する手間が省ける
　　社内用サービスなどが、IGWを作成せずともVPC外のサービスにアクセスできる

　　アクセス制御は行いやすい
　　各エンドポイントは特定のサービスごとに設けられており、別サービスへの通信に使用することができません
　　エンドポイントには、エンドポイントポリシーというポリシーをアタッチし、特定のAPIアクションレベルでアクセス制御を行うことができます

　　インターフェイスエンドポイントを使用する場合、コストが発生する
　　VPCエンドポイントはサービスごとに固有であり、そのVPCエンドポイントごとに料金が発生

AWS　PrivateLink（インターフェイスエンドポイント）

　AWS　PrivateLink＝インターフェイスエンドポイントと考えてよい
　VPCエンドポイントにはゲートウェイ型とAWS PrivateLink（インターフェイス型）があり、
　　Amazon CloudWatch Logsへの接続は「AWS PrivateLink」を利用します。
　PrivateLinkは、CloudWatch LogsやS3など多数のサービスで利用できます。

セキュリテイグループ
　（リージョン（VPC（サブネット（セキュリテイグループ））））
　　サーバ単位で適用
　　ステートフル
　　VPC内のトラフィックを制御するFWの機能で、インバウンド通信とアウトバウンド通信をポートとプロトコル単位で制御
　　作成したセキュリテイグループは。EC２やRDS等のリソース単位（厳密に言うとENI単位）でアタッチ

　　許可リストのみ記載。
　　デフォルト
　　　インバウンド通信　許可なし
　　　アウトバウンド通信　すべて可
　　デフォルトでは同じセキュリテイグループ内通信のみ許可
　　セキュリテイグループはステートフルFW。許可された通信の帰りの通信を自動的に許可
　　優先順位なし。すべてのルールを適用
　
ACL
　　VPC/サブネット単位で適用
　　ステートレス
　　VPC内のトラフィックを制御するFWの機能で、インバウンド通信とアウトバウンド通信をポートとプロトコル単位で制御
　　作成したACLはサブネット単位でアタッチ
　　許可リストと拒否リストを記載できる。ルール番号の小さい順に評価
　　ACLはステートレスFW。一連の通信かどうかにかかわらず、独立した評価をされる
　　▲デフォルトではすべての通信を許可
　　番号の順番通りに適用
　　ネットワークACLはステートレスであるため、インバウンド通信の許可に加えて、アウトバウンド通信の許可設定も必要となります。
　　その場合は、PC側では広範囲なポート番号設定が必要となるため、エフェメラルポートへのSSH通信設定が必要となります。
　　これは1024-65535のポート番号範囲でSSHを許可する設定です。
　　これによって、PC側で1024-65535のポート番号範囲のいづれかが設定されたとしても、ネットワークACLによって戻りトラフィックが許可されることになります。

併用した場合
　　以下の順で評価
　　　インバウンド通信　ACL-＞セキュリテイグループ
　　　アウトバウンド通信　セキュリテイグループ-＞ACL

◆Elastic Network Interface(ENI)

　　　EC2等にアタッチすることができる仮想ネットワークインターネット

NATインスタンス
　　NATゲートウェイはマネージドサービスなのに対し、NATインスタンスはEC2インスタンスから作成するため、
　　ユーザーが障害対応などの運用管理を実施する必要があります。

Egress-Only IGW

   IPv6使用時に用いるリソース。IPv6はデフォルトでパブリックアドレス。
　　◆VPC内のリソースに対して、インターネットからのインバウンド通信を受信させたくない場合は、Egress-Only IGWを使用します。

▲AWSクライアントVPN
　OpenVPNベースのVPNクライアントを使用して、特定ユーザーのPCなどから指定したサブネットにVPN通信を可能にする機能です

▲Direct Connect　GW
　　Direct Connectは単一のオンプレ拠点から、単一のアカウントの単一VPCに通信ができる
　　Direct Connect　GWは複数間で通信

◆仮想インターフェイス（VIF）
　　Direct Connectを使用するためには、物理的な接続を確保したうえで、AWSリソースにアクセスするための論理インターフェースを作成する必要があります
　　これを仮想インターフェイス（VIF）という

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　Elastic　Load Balamcing(ELB)　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
＊ALBをプライベートサブネットに配置すると、インターネットからの受付ができなくなる

◆ALBはEC2インスタンスを複数のAWSリージョンに分散させるトラフィック分散は実施できません。
ALBは1つのリージョン内において複数のアベイラビリティゾーンにトラフィックを分散します。

ターゲットグループ

〇ヘルスチェック
　　ALB　指定したURLに対して応答確認
　　EC2　インスタンスのステータスチェックの結果を確認

スティッキーセッション
　同じクライアントからのリクエストを同じＥＣ２インスタンスに送信する機能
　セッション情報はスティッキーセッションより別のＤＢサーバ等に保存して、ＥＣ2はステートレスに保つことが推奨されている

NLB経由でオンプレミスのサーバにリクエストをルーティングすることで、UDP'ベースのアプリケーションに対応でき、可用性を向上できる
◆ELBのうち固定IPアドレスを割り当てることができるのは「NLB」です。

さらにELBの◆クロスゾーン負荷分散を有効化すると、ロードバランサーは有効なすべてのアベイラビリティーゾーンに
登録済みのターゲットにトラフィックを均等に分散します。

◆NLBで指定できるプロトコルは、TCP、TLS、UDPです。HTTPSは指定できない
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　Route53　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

AWS　Route53　Resolver


◆AWS　Route53のルーティングポリシーを使用することで、リージョン単位の障害時にフェイルオーバーが可能になる

位置情報ルーティングポリシー – ユーザーの位置に基づいてトラフィックをルーティングする場合に使用します。
Route53の位置情報ルーティングを使用すると、ユーザーの位置情報、つまりDNSクエリの発信位置に基づいてトラフィックを処理するリソースを選択できます。
 たとえば、ヨーロッパからのすべてのリクエストをノルウェー地域のELBロードバランサーにルーティングして、アジア地域で発生したリクエストは
東京リージョンのELBロードバランサーにルーティングさせるといった設定が可能となります。

「位置情報ルーティングポリシー」は、ユーザーの位置情報に基づいて回答するIPアドレスを決めます。
ユーザーの位置情報から、ユーザーの使用言語に合ったコンテンツがあるリソースのIPアドレスを回答することができます。

地理的近接性ルーティングポリシー – リソースの場所に基づいてトラフィックをルーティングし、必要に応じてトラフィックをある場所のリソースから
別の場所のリソースに移動する場合に使用します。
、ユーザーの位置情報を元に、ユーザーと地理的に近いリージョンにあるリソースのIPアドレスを回答します。

レイテンシールーティングポリシー – 複数の AWS リージョンにリソースがあり、▲レイテンシーの最も小さいリージョンにトラフィックを
　　　　　　　　　　　　　　　　　　ルーティングする場合に使用します。

フェイルオーバーとはプライマリーのサーバ / システム / ネットワークにおいて異常事態が発生したとき、自動的に待機系のセカンダリー構成に切り換える機能のことです。
これによって、システムが完全にダウンすることを防ぐことができます。
常時プライマリーとセカンダリーの構成を常に利用する▲アクティブ／アクティブフェールオーバーと、
常時プライマリーを利用しつつ、
異常が発生した場合にのみセカンダリー構成を利用する▲アクティブ／パッシブフェールオーバーの２種類が存在します。


▲Route53のフェイルオーバールーティングでは全てのEC2インスタンスに着信要求を均等に分散するといった処理はできません。
これは特定のリソースに異常が発生した場合に、フェールオーバーを実行する際に利用します。

〇「複数値回答ルーティングポリシー」は、複数のリソースに対してヘルスチェックを行い、正常なリソースの中から最大8個のIPアドレスを回答します。

◆Route 53にはエイリアスレコードという特別なDNSレコードがあります。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　CloudFront　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
高速なコンテナ配信
AWS　CloudFront
　コンテンツ配信ネットワーク（CDN）
　キャッシュヒットしなかった場合でも、AWSバックボーンネットワークを使用し、通信距離を最適化できるため、待ち時間の短縮に貢献できる
　一般的にキャッシュすることがない動的コンテンツであっても、CloudFrontの恩恵を受けることができる。


　CloudFrontの署名付きURLと署名付きCookieは同じ基本機能を提供しており、CloudFrontが配信するコンテンツにアクセスできるユーザーを制御できます。
　現在のオブジェクトURLを変更しないで、有料会員だけにプライベートメディアファイルへのアクセスを提供するためには、CloudFrontの署名付きCookies機能を利用します。
　これによって、特定のCookiesを有しているユーザーのみがオブジェクトにアクセスできるように制限することが可能です

CloudFrontはユーザーが初めてアクセスするコンテンツについてはオリジンサーバーからデータを取得します。
同時に、エッジロケーションにあるCloudFrontエッジサーバーにキャッシュを保持します。

◆フィールドレベル暗号化は、ユーザーから送信されたHTMLフォームのPOSTリクエストのうち、一部のフィールドを暗号化し、
特定のアプリケーションでのみ復号可能とする機能です。リクエストをオリジンに転送する前にCloudFrontがさらにデータを暗号化するので、
HTTPS通信のセキュリティがより強固になります。

◆CloudFront署名付きURLは、URLを知っている特定のクライアントが期限付きでコンテンツへアクセスできる機能です。
S3の署名付きURLと同じく、CloudFront署名付きURL発行時に有効期限を設定すると、有効期限の過ぎたURLは無効になります。
CloudFront署名付きURLを利用する時は、OAI（Origin Access Identity）を有効にしてS3バケットへ直接アクセスされないように設定します。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS　Global Accelerator　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
高速なコンテナ配信

AWS　Global　Accelerator
　Global Acceleratorは、ユーザーからAWSリソースまでのアクセス経路をAWSネットワークを利用して最適化するサービスです。
  ◆主に▲マルチリージョンアプリケーションのパフォーマンスを向上させるために使用

  AWS Global Acceleratorはエッジロケーションを利用して、グローバルに高速にアプリケーションにアクセスさせるための機能

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　Relational Database Service(RDS)　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

自動バックアップのオプションを有効にすると、毎日バックアップが行われ、保持期間は7日間
最大35日間

RDSのバックアップ（スナップショット）の保持期間を120日に設定したいという点です。
RDSにおける自動バックアップの保持期間は最大で35日です。35日を超えてスナップショットを保持したい場合は以下の方法があります。
- AWS Backupでバックアッププランを作成する
- 手動でスナップショットを取得する
　手動で取得したスナップショットには保持期間の上限がありません。

RDS　PROXY
　　対応DB　MariaDB、MYSQL、PostgreSQL、SQLServerのみ

暗号化
　　AWS Key Management Service(AWS KMS)
　　AWS KMSのCMKを利用して暗号化されたAMIを利用するには、その暗号化に利用したCMKの権限を有していることが必要です。
　　したがって、KMSのキーポリシーを変更して、第三者のAWSアカウントがAMIの暗号化に利用したKMSキーを使用できる権限を付与します。

RDS
　プロビジョニングIOPS　SSDは対応していない


Amazon RDSでは、マスターのDBインスタンスのデータを非同期にレプリケーションしてリードレプリカを提供しています。
RDSはレプリカを最大15台作成し、アプリケーションの大容量読み取りトラフィックを提供して、全体の読み込みスループットを向上させることができます。

[暗号化]
データベースインスタンスの暗号化を行うと、バックアップやスナップショット、ログ、RR（リードレプリカ：参照専用のデータベースレプリカ）へも暗号化が行われます。
暗号化を行う場合はデータベースの作成時に指定し、作成した後に暗号を有効化することはできません。
暗号化されていないデータベースインスタンスを暗号化したい場合は、対象のインスタンスのスナップショットを作成し、
スナップショットをコピーする際に暗号化を有効にします。
暗号化されたスナップショットを基にデータベースインスタンスを復元すると、暗号化されたデータベースインスタンスが新規に構築されます。

◆データベースのストレージは、Storage Auto Scaling（自動スケーリング）機能により拡張されます。ストレージの空き容量が10%以下の状態が
5分以上継続した場合、ストレージ容量が増やされます。
ただし増えたストレージ容量は減らす（ストレージを縮小する）ことはできませんので注意してください。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　Aurora　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

リードレプリカを最大15個配置
MYSQL、PostgreSQLよりそれぞれ最大5倍、３倍の高速処理

◆クロスリージョンでのディザスタリカバリ機能を実現

AWS　Aurora　Serverless　Mysql互換
　ワークロードの予測が難しい場合には、自動的にスケールアップ・ダウンしてくれる
  例）OLTP処理に使う

◆◆AWS　Auroraグルーバルデータベースを活用すれば、クロスリージョンレプリカよりも、ダウンタイムを抑えた
フェールオーバーが可能になる

Amazon Aurora MySQLデータベースはクラスター構成によって複数AZにまたがってボリュームを構成しているため、
Amazon RDS MySQLデータベースに比較するとAZ障害には強い構成となっています

Aurora グローバルデータベースは複数の AWS リージョン にまたがっているため、各リージョンにおいて低レイテンシーの読み取りが実現し、
AWS リージョン 全体の停止からの災害対策を可能とします。

◆データベースインスタンスとストレージが分離しており、必要に応じてインスタンスだけを増減できる
◆ストレージは破損したデータの検出と修復を自動的に行うことができる

Amazon Auroraには、データベースの◆◆クローン（複製）を作成できる機能があります。
クローンの作成時にデータのコピーが発生しないので、スナップショットの取得/復元やデータベースのエクスポート/インポートするよりも
高速に作成できます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　DynamoDB　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
NoSQLデータベース

Amazon DynamoDB は1 日に 10 兆件以上のリクエストを処理することができるNoSQLデータベースです。
毎秒 2,000 万件を超えるリクエスト処理が可能です。
DynamoDB はキーバリュー型の連続した単純なデータ形式を高速で処理するのに適しており、IoTデータやセッションデータ管理などに用いられます。
また、DynamoDBのTime-to-Live（TTL）メカニズムにより、アプリケーションのWebセッションを簡単に管理できます。
◆◆Time To Live（TTL）機能は、特定の時点で自動的にデータ項目を削除する機能です。
項目にTTL属性（UNIX時間形式のタイムスタンプ）を設定することで、その時刻が来たときにDynamoDBが自動的に項目を削除します。

Amazon DynamoDBは、主キーでインデックスをつけられたデータを格納することができます。
それにより、1バイトから最大400KBまでの範囲の項目への低レイテンシーの読み取りおよび書き込みアクセスが可能であり、メタデータの保存に最適です。

◆1つのデータは400ＫＢに制限

項目（レコードのようなもの）、属性

パーティションキー、ソートキー

読み取りキャパシティユニット（RCU）　１秒間に読み取りできる回数
書き込みキャパシティユニット（WCU）　１秒間に書き込みできる回数

◆書き込みキャパシティユニットを増やすことによりアプリケーションの書き込みが遅延なく行える
　キャパシティユニットを増やすと、読み込み・書き込みが発生していなくても、設定した分の料金がかかります。
◆キャパシティユニットの変更はテーブルごとにいつでも行うことができます。サービスダウンなどは発生しません。
x 読み込みキャパシティユニットを増やすと一貫性のない読み取りが増える

◆Auto Scalingがデフォルトで有効化されている

スロットリングエラー

プロビジョニングモード
　RCU、WCUを管理者が指定し、テーブルに対して読み取り、書き込みの処理できる量を指定することができます
　多数のリクエストが継続的に発生する場合に使う
　【利用するキャパシティが事前に予測できるときに選択するモード】

オンデマンドモード
　【読み取り、書き込みの需要の予測が困難な場合】に、使用。RCU、WCUの指定なく、多くのリクエストを処理
　突発的に高くなるような予測が難しいときに使う。

結果整合性
　AZ間で3つのデータコピーのうち、２つで書き込み成功のデータがかえされる。AZ１つが反映されてないのに。

強力な整合性
　
TTL（有効期限）

◆◆DYnamoDB　STreams(DynamoDBストリーム)

  DynamoDBストリームはDynamoDB テーブルに保存されたデータ項目の変更をキャプチャする機能です。
  DynamoDBストリームを有効化することで、DynamoDBテーブルに保存されたデータ項目に対して、データの追加・変更・削除が発生した際に履歴を保持する
  ことができます。
  DynamoDBストリームを有効化した後に、ユーザーがDynamoDB テーブルにデータを新規に追加すると、そのデータイベントをトリガーにしてLambda関数を動作させる
  といったイベント起動型の処理を実行することができます。 

  DynamoDB ストリームはDynamoDB テーブル内の項目レベルの変更の時系列シーケンスをキャプチャし、この情報を最大 24 時間ログに保存します。
  ログは24時間経過すると削除されてしまうため、ログ情報をAmazon S3などに保存するように設定することが必要となります。

DYnamoDB　Accelerator(DAX)
  キャッシュサービス。ミリ秒単位からマイクロ秒単位にパフォーマンス向上
　DynamoDB テーブルは◆DynamoDB Accelerator(DAX) を有効化することで、追加のキャッシュレイヤーによってミリセカンドからマイクロセカンドへの
　最大 10 倍のパフォーマンス向上を実現します。

◆バックアップ
　・ポイントインタイムリカバリ
　　　テーブルの連続バックアップ機能。過去35日間の任意の時点にテーブルを復元することができる

　・オンデマンドバックアップ
　　　完全バックアップ

グローバルテーブル
　マルチリージョンでマルチマスターのDYnamoDBテーブルを作成する

DYnamoDBテーブルクラス
　パフォーマンスやコストの要件が異なる保存領域のこと

◆◆DynamoDBトランザクション機能はDynamoDBテーブルへの書き込みなどのトランザクション発生時に特定の処理を実行させることができる機能です。
これによって、DynamoDBテーブルへのデータ書き込み時に機密性の高いデータを削除するアクションを設定して機密データを削除します。

デッドレターキューによってリクエストメッセージが失われることはないため、書き込み処理がどのような状況下でも失われないようにする要件に合致しています。


◆◆DynamoDBのS3へのエクスポート機能は、既存のテーブルデータを任意のS3バケットに直接エクスポートする機能です。
ユーザはこの機能のために独自のアプリケーションを用意したり、追加のコードを記述したりする必要はありません。
また、この機能を使用したデータのエクスポートでは、対象のテーブルに設定されたRCUを消費せず、テーブルの可用性やパフォーマンスにも
影響を及ぼさないという点が大きなメリットです。
実行するためには、対象のテーブルのポイントインタイムリカバリを有効にする必要がある
ｘエクスポート先のS3バケットは自動的に作成される
ｘ実行するためには、事前にDynamoDBのテーブルからS3バケットへデータをコピーするLambda関数を作成しておく必要がある

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　ElastiCache　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

マネージドの分散型インメモリデータストア（すべてのデータをメモリ上に保持する）
〇KVS（Key-Value Store:Key-Value型のデータストア）型のデータベースエンジン「Redis」「Memcached」が用意されています。

ミリ秒単位からマイクロ秒単位にパフォーマンス向上

２つのエンジン
　◆Redis
　　マルチスレッド。ＣＰＵコア数を多くするとパフォーマンス向上
　　複雑なデータ型。
　　レプリケーションやデータの永続保持、データ暗号化などの機能を持つ
　　▲耐障害性の機能として「自動フェイルオーバー」「マルチAZ」を備えています。

　◆Memcached
　　string型だけでなく、Hash型など多数のデータ型を扱うことが可能

読み取り処理を支援するためのシンプルなデータ処理になるため、RedisではなくElastiCache Memcachedの利用が最適です。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Identity and Access Management(IAM　アイアム)　★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

プリンシバル
　AWSのサービスやリソースに対して、操作を実行する主体のこと。
　ルートユーザ（＝AWSアカウント）
　IAMユーザー　IAMユーザーグループ
　IAMロール　一時的な権限
　フェデレーティッドユーザ　AWSアカウント外で管理

◆◆AWS Security Token Service(AWS STS)
  APIコール内、使用期限付きのアクセスキーを取得することができる
  ユーザーに一時的な認証許可をあたえる機能であり、中長期的なアクセス権限を付与するためには不適切
  AWS STSを利用したウェブ ID フェデレーションによって、アクセス認証を実施することで、一時的なアクセス認証を実現できます。

◆ウェブ ID フェデレーションを使用することで、ユーザーはGoogleなどの外部 のID プロバイダーを使用してアプリケーションにサインインすることができます。
認証トークンを受け取ったら、そのトークンを AWS リソースを使用するためのアクセス許可を持つ IAM ロールにマッピングして、
AWS の一時的セキュリティ認証情報に変換することができます。IDプロバイダー（IdP） を使用することで、アプリケーション内部に長期的なセキュリティ認証情報を
保持することが必要なくなるため、セキュリティを向上させることができます。

〇フェデレーティッドユーザ
　AmazonやFacebookなど、当確AWSアカウントの外で管理されているユーザーIDを表すプリンシパル。
　例）Active　Directory(AD)で管理されたユーザー

〇IAMユーザーグループ
  IAMユーザーは特定のユーザーにAWSリソースへのアクションを許可する際に設定するエンティティです。
  リソースに対して権限を付与する際に利用できません。

セキュリテイポリシー

　プリンシパルに対するアクセス許可を制御するために使用する要素

　アクセス許可の上限を定義するポリシー
　　　アクセス許可の境界
         「アクセス許可の上限を定義するポリシー」は、「アクセス許可を付与するポリシー」との論理積（両方に該当）で評価され、
　　　　　プリンシパルが実行できる操作が決定。プリンシパルが実行できる操作の限界を定義するようなイメージ

　　　サービスコントロールポリシー（SCP）
　　　　　AWS　Organizationsの機能。
　　　　　個別のプリンシバルにアタッチする必要がないため、複数アカウントで実行させたくない最低限の操作を定義したりする場合便利です
　　　　　サービスコントロールポリシー（SCP）はホワイトリスト形式のポリシーです。
　　　　　SCPが設定された組織（OU）のメンバーアカウントは、SCP内で許可した範囲内において、そのアカウント内のメンバーに対して
　　　　　IAMポリシーによってアクセス権限を付与できるアカウントとなります。

IAMポリシーは
　　IAMポリシー（IDベースのポリシー）は、IAMユーザー、IAMグループ、IAMロールにアタッチするポリシーです。
    これによって権限範囲を詳細に設定することができます。
     しかしながら、IAMポリシーによって定められた権限範囲をリソースに付与する際はIAMロールが必要となります。
　　◆管理(マネージド)ポリシー
　　　　AWS管理ポリシー　Awsによってあらかじめ定義したポリシー
　　　　カスタマー管理ポリシー　ユーザーが定義するポリシー
　　インラインポリシー
　　　　ユーザーが対象ごとに作成・付与するポリシー
　　　　複数の対象へアタッチできない
◆リソースベースのポリシー
　　AWSリソース（S3バケットなど）に対してアタッチするインラインポリシーです。
　　例えば、S3のバケットポリシーがリソースベースのポリシーに該当し、S3バケットへのアクセスを特定のユーザーや
　　特定のIPアドレスだけに許可する場合などに利用します。

◆IAM Policy Simulator で、正しく設定されているかチェックする

◆SCP(上限定義) >> リソースベースのポリシー(許可付与) >> アイデンティティベースのポリシー(許可付与) >> アクセス許可の境界(上限定義)

異なるAWS アカウント 上のリソースへのアクセスを委任するために、◆クロスアカウントアクセス許可とIAMロールを設定します。
これによって、特定のアカウントにある特定のリソースを別のアカウントのユーザーと共有しすることができます。
クロスアカウントアクセスを設定することで、利用者はアカウントごとに IAM ユーザーを作成する必要がなくなります。

◆IAM でのセキュリティのベストプラクティス
    人間のユーザーが一時的な認証情報を使用して AWS にアクセスする場合に ID プロバイダーとのフェデレーションを使用することを必須とする
    ワークロードが AWS にアクセスする場合に IAM ロールで一時的な資格情報を使用することを必須とする
    ルートユーザーの認証情報を保護するためのベストプラクティスに沿う
    IAM Access Analyzer を使用して、アクセスアクティビティに基づいて最小特権ポリシーを生成する
    IAM ポリシーで条件を指定して、アクセスをさらに制限する
    IAM Access Analyzer を使用して、リソースへのパブリックアクセスおよびクロスアカウントアクセスを確認する
    複数のアカウントにまたがるアクセス許可のガードレールを確立する
    アクセス許可の境界を使用して、アカウント内のアクセス許可の管理を委任する

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Directory　Service ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

AD ConnectorはIAMとオンプレミス環境のMS Active Directoryとを連携するのに利用します。

Amazon Workspaceサービスを社内ユーザーに認証する際にMS Active Directoryと連携する場合はAD Connectorによる統合を実施します。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Cognito ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

◆ユーザプール
　AWS Cognitoにおけるユーザーおよびグループに関する情報などを格納するためのユーザディレクトリ

アイデンティティプール（IDプール）
　次に、一時的な認証情報を発行

ユーザー数の上限がデフォルトで4000万と非常に大きいため、不特定多数のユーザーが利用するアプリケーションのユーザー管理に適しています。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS WAF（Webアプリ化ションファイアウォール） ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
リクエストに対する検査方法（ルール）と処理方法（アクション）を定義

検査方法（ルール）

Web　ACL　
　保護できるもの
　Amazon CloudFrontディストリビューション
　Amazon API Gateway REST API
  ▲Application Load Balancer
  Aws AppSync GraphQL API
  AWS Cognitoユーザープール
　AWS App Runnerのサービス
　AWS Verified Accessインスタンス

◆◆NLBは直接保護できません。

◆◆AWS WAFは直接AWS　API　Gatewayに直接関連づけることができます

◆Amazon S3バケットにCloudFrontディストリビューションによるコンテンツ配信を構成することで、AWS WAF を利用してReferer制限を実装することができます。
AWS WAF は、CloudFront に転送される HTTP および HTTPS リクエストをモニタリングして、WEBアクセスの拒否ルールなどを設定できる
ウェブアプリケーションファイアウォールです。

◆「Web ACL」というアクセスコントロールリストで、IPアドレス、HTTPヘッダー、HTTP本文、URI文字列などに対してフィルタリングの条件を設定できます。
また、Web ACLには接続元のIPアドレスから国別にアクセスを制限できる機能（地理的一致ルール）や、特定の時間内に
◆リクエスト数が設定値を超えたIPアドレスをブロックする機能（レートベースのルール）もあります。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Shield ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
〇DDos攻撃から保護するためのマネージドサービス

〇AWS Shield　STandard 無料　L3、L4　DDOS攻撃の96％を自動削減

◆AWS Shield　Adanced　有料　L3、L4、L7

◆◆AWS Shield Standard はAmazon CloudFront にRoute53を利用すると自動的に適用されています。
WS Shield Advanced はAWS Shield  Standardの機能に加えて、Elastic IP アドレス、ELB、Amazon CloudFront、Global Accelerator、

または Route 53 リソースへのトラフィックパターンに基づいて独自にカスタマイズされた検出方式を設定することができます。
これによって、大規模で高度な DDoS 攻撃に対する追加の検出および緩和策を実施することができます。

◆◆Shield AdvancedはAPI Gatewayをサポートしていない
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Certificate Manager(ACM) ★★　（読み方：サーティフィケイト）
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

ACM証明書

ACMワイルドカード証明書
　　特定のドメインに対し、１つの証明書で無制限の数のサブドメインを保護できる

ALBはSSL/TLSターミネーションが可能。EC2インスタンスから負荷を取り除くことができる
◆SSL/TLSをACMにインポートし、ACMからのSSL/TLS証明書を活用してALBにHTTSリスナーを設定

AWS Certificate Manager（ACM）の各証明書の有効期限が10日前になった場合に自動的に通知されるように、
ACM証明書の有効期限をチェックするAmazon EventBridgeルールを作成して、
10日以内に有効期限切れになる証明書がある場合にAmazon SNSプッシュ通知を実施するように構成します。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Key Manager　Service(AWS　KMS) ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
■ユーザーが管理している鍵を使用する (SSE-C)
■AWS KMS（AWS Key Management Service）に保存されているKMSキーを使用する (SSE-KMS)
■S3が管理している鍵を使用する (SSE-S3)

マルチリージョンキー
　　複数のリージョンで同じキーのように相互使用することができる暗号キー
　　１つのリージョンで暗号化し、異なるリージョンで複合化が可能
　　◆通常はリージョンごと。

◆AWS KMSでは「KMSキー」「データキー」と呼ばれる2種類の鍵を使用してデータの暗号化および復号を行います。
このように二段階で鍵を保護する方式を「▲エンベロープ暗号化（Envelope Encryption）」といいます。

◆「KMSキー」はデータキーを暗号化する際に使用し、「データキー」はデータを暗号化する際に使用します。

KMSはAWS CloudTrailと連携しており、鍵の使用ログ（いつどのサービスで鍵が使用されたか）が記録されるため、
 鍵の利用状況を監査することができます。

・AWSマネージド型のKMSキー
・カスタマーマネージド型のキー
　　　共有できる鍵は▲カスタマーマネージド型のKMSキーのみです。
　　　AWSマネージド型のKMSキーはキーポリシーを編集できないため他のAWSアカウントと共有できません。
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Macie ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Ｓ３に対し機械学習とパターンマッチングを使用してAmazonS3に格納されているデータ内の機密データを
検出し、リスクに対する自動保護サービス

Amazon Macieの検出結果(機密データ)を、Amazon EventBridgeでフィルタリングし、Amazon SNSで通知する

Amazon Macieは、S3バケット内のデータ保護に特化したセキュリティサービスです。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Secrets　GuardDuty ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
セキュリテイの観点から脅威リスクを検知するＡＷＳマネージドサービス

検出結果はAmazon　EventBridgeに送信

使用開始には有効化を行うだけ

Amazon GuardDutyは▲悪意のあるアクティビティのために AWS アカウントとワークロードを継続的にモニタリングし、
可視化と修復のための詳細なセキュリティ調査結果を提供する▲脅威検出サービスです。

GuardDutyとEventBridgeを連携することにより、脅威を検知した際に管理者宛にメール通知を行ったり、
Lambda関数により脅威として検知したファイルを自動的に削除する、といった運用が可能です。
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Inspector ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWSのワークロードにおける▲ソフトウエアの脆弱性や▲ネットワークへの意図しない公開がないかなどっを
スキャンし、検出する脆弱性管理サービス

自動的かつ継続的なスキャンによって、▲ほぼリアルタイムでの脆弱性を発見することができます

EC2インスタンスの場合。SSMを手動でアクティブ化する必要あり

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Simple　Queue　Service（SQS） ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

フルマネージドのメッセージキューインサービス

デフォルトで４日間保持、最大１４日、最大256kバイト

スタンダードキュー
　メッセージは順不同で取得される可能性あり
　同じメッセージのコピーもある　べきとう性のロジックが必要

FIFOキュー（先入先出）

可視性タイムアウト　
　デフォルト30秒。最小0秒、最大12H
　他のコンシュマーが同じメッセージを受信しない

ショートポーリング

ロングポーリング
▲　メッセージが空である場合は設定された時間（最大20秒）を待ちます。
   時間が経過してもメッセージを得られない場合は、「空」というレスポンスが返ります。

デッドレターキュー（DLQ）
　送信されたメッセージに誤りがあり、コンシュマーがメッセージが正常に処理できなかった場合、そのメッセージを一時的に保
  存するための特別なタイプのキュー
　SQSでは、一定の回数（1～1000）エラーになったメッセージを通常のキューから分離し、「デッドレターキュー」に配置します。
　デッドレターキュー上のメッセージは受信されませんので、エラーを繰り返すこともありません。元のキューに戻されない

可視性タイムアウトが適用されている間はそのメッセージが最初にポーリングされたインスタンス以外からは一定期間見えなくなります。
デフォルトの可視性タイムアウトは 30 秒に設定されており、最小値は 0 秒、最大スケールは 12 時間に設定が可能です。

「ジョブの負荷に応じてインスタンスを増減すること。」に対応するには、Amazon SQSキューサイズに応じて、
EC2インスタンスを増減するようなAuto Scalingを構成します。

-----
遅延キューはキュー内のメッセージが配信されると、一定期間すべてのインスタンスからメッセージが見れなくなる設定です。
----

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Simple　Notification　Service（SNS） ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

配信者から受信者に対して、メッセージ配信を行うためのマネージドサービス

配信者--＞AWS SNS -->受信者


トピック

　標準トピック
　　メッセージは発行された順序を維持しない。重複する
　　無制限
　　
　FIFOトピック
　　メッセージは発行された順序を維持。重複排除

モバイルプッシュ通知　インストールされているアプリに対して、モバイル通知
ショートメッセージも対応

Amazon SNSはメッセージに優先順位をつける機能はありません。

▲AWSではアプリケーション処理の異常正常を監視するためには、Amazon CloudWatchの機能を利用することになります。
そして、Amazon CloudWatchにおいて通知機能を設定する際はAmazon SNSを利用することが一般的です。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS EventBridge（CloudWatch　Events） ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

イベントバス
　イベントを受信するためのルータ

▲スケジュールの最小精度は１分

Amazon EventBridgeでは、スケジュールに基づいて AWS Lambda 関数を実行するルールを設定できます。
その際は、lambda:InvokeFunctionをアクションに設定し、EventBridge サービスプリンシパル (events.amazonaws.com) のアクセス許可を使用してルールを
実行するには、add-permission コマンドを使用します。

Lambdaファンクションを利用して有料ユーザーのメッセージ処理を優先的に処理するポーリング処理を設定することはできません。
キューの優先度はSQSキューにおいて設定します。
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Step　Functions ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

ステートマシン
　　Step　Functionsにより作成される一連のワークフロー

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS MQ ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
▲業界標準APIやプロトコルを利用してシステム間でメッセージを送受信するこことができるマネージドのメッセージキューサービス

▲Amazon MQは、Apache ActiveMQとRabbitMQに対応したフルマネージドのメッセージブローカーサービスです。
メッセージブローカーサービスとは、複数のサービスやシステム間の連携に使用される「メッセージキュー」を管理するサービスのことです。
Amazon MQのメッセージブローカーは単一のAZ内で動作します。
AZ障害に備えて可用性を向上したい場合は、アクティブ/スタンバイ構成を選択すると複数のAZで動作できます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆◆AWS AppFlow ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
画面で操作
◆コーディング不要で、Saasアプリケーション（Slack、Salesforce等）間の▲データ転送を自動化することができる
Amazon AppFlowを利用して、サードパーティのSaaSアプリケーションからAmazon S3バケットにデータ転送するデータフローを作成することができます。

◆Amazon AppFlow は、Salesforce、SAP、Google Analytics、Facebook Ads など、ビジネスオペレーションに日々使用される 
これを利用して、SaaS アプリケーションから、ノーコードでAmazon S3バケットなどのAWSリソースに対して
データを転送することができます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Kinesis ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

▲AWS Kinesis Data　Stream
　ECサイトの訪問者の情報をリアル分析し、リコメンドに反映

シャード
　　データの格納場所
　　データストリームは複数のシャードで構成

保存期間　初期：24時間
　　　　　最長：365日

AWS Kinesis Data　Firehose（現：Amazon　Data　Firehose）

　Amazon Kinesis Data FirehoseはデータをAmazon DynamoDBに配信することができません。
▲　Kinesis Data Firehoseは
　　　　Amazon S3、
　　　　Amazon Redshift、
　　　　Amazon OpenSearchサービス、
　　　　SplunkとHTTP エンドポイント送信先にデータを配信することができます。

　Amazon Kinesis Data FirehoseはAWS Lambda関数と連携して、データ変換とデータ配信を実施するサービスです。

AWS Kinesis Data　Analytics（現：◆Amazon　Maneged　Service　For　APache　Flink）

  !!◆ストリーミングデータのクエリ処理にはKinesis Data FirehoseよりAmazon Managed Service for Apache Flinkが適しています。
　　デバイスからのデータをAmazon Kinesis Data Streamに取得して、Amazon Managed Service for Apache Flinkのクエリ処理でデータを
　　分割してAmazon S3に保存する。
　　Amazon Managed Service for Apache Flink（旧 Kinesis Data Analytics）は、ストリーミングデータを処理し、可視化・分析できるサービスです。
　　処理用のテンプレートが用意されていたり、標準SQLのクエリが発行できたり、JavaやPythonなどのプログラミング言語がサポートされているなど、
　　柔軟に処理を組み込むことができます。
　　データをデータベースへ移行することなく処理することで、リアルタイムに結果を得ることができます。

AWS Kinesis Video　streams

-----
一方で、Kinesis Firehoseも大量のストリーミングデータを取得して、Lambda関数を利用したETL処理をしつつ、
RedShiftやS3などのストレージやデータベースに配信します。
両者の違いは「レイテンシーの速さ」です。どのような速さが求められているかに応じて、ユースケースを使い分ける必要があります。
Amazon Kinesis Data Streamsは1秒以下でストリーミングデータをリアルタイムに処理したい場合に利用します。
Kinesis Data Firehoseはデータロードが60秒毎のバッチで実行されるため、ニアリアルタイム処理によるデータ配信を行っています。
-----

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Glue ★★★　　分析
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
フルマネのETLツール

ETLとはデータソースから、データ分析基盤に対してデータを統合するときに発生するプロセス
データの抽出、変換、ロード (ETL) パイプラインを視覚的に作成、実行、モニタリングして、データをデータレイクにロードできます。
AWS GlueジョブをAmazon EventBridgeスケジュールイベントに設定することで、定期的に顧客情報を取得してから加工する仕組みを構成することができます。
「クローラー」は、データソースからデータを抽出し、「データカタログ」を作成します。
データカタログとは、抽出したデータのメタデータ（データの属性情報）が保存されたものです。データそのものではなく、

このデータの変換およびターゲットへ書き出す処理を「ジョブ」と呼びます。
変換処理は、既存のETLツールであるApache SparkやScalaを用いて自動生成したり、生成されたスクリプトを自分で編集することができます。

Glue  -> 、Amazon EMR※やAmazon Athena

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Redshift ★★★　　▲データベースサービス
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
ペタバイト級までスケールアウトできる、【SQL】を使った【データウエアハウス】・分析向けに特化したフルマネージドの列指向データベース

◆AWS Redshiftにデータを送信する場合、一度S3バスケットにデータを配信した後に、AWS RedshiftへCopyコマンドをハックすることにより、、
データがロードされます。リアルタイムとはいいがたい

Redshiftはスナップショット用に無料ストレージを提供していますが、上限のストレージ容量を超過すると課金が発生します。

◆Amazon Redshift Spectrumを使うことで、S3バケット上に保存されたファイルに対して直接、高度なクエリ処理を実行することが可能になります。
Spectrumの実行には数千台までスケールできるインスタンスが用意されており、データセットがエクサバイトを超えても、高速なデータ取り出しと一貫
したパフォーマンスを実現します。

◆Redshiftクラスターに対する拡張VPCルーティングを有効にすることで、VPCに出入りするRedshiftクラスターのすべてのCOPYおよびUNLOADトラフィックを
監視することができます。

▲＊RedshiftはAuto Scalingに対応していない

Amazon Redshift Serverless
　従来のRedshiftの機能を備えながらも、インフラ管理を不要にし、
　自動スケーリングと従量課金制で柔軟かつコスト効率の高いデータ分析を可能にするサービスです。
　クラスタやノードの管理はAWSが行うため、運用がシンプルになり、手軽にデータ分析を始めることができます。

Amazon Redshift ML
　Redshiftデータウェアハウス内で機械学習モデルを作成、訓練、デプロイし、SQLを使用して大規模データセットに対して予測分析を行うサービスです。
　従来、データベース内のデータを用いた機械学習には、Amazon SageMakerのような機械学習サービスやPythonなどのプログラミング言語の知識が
　必要でしたが、Redshift MLの登場により、SQLに熟練しているデータベース開発者でも、機械学習プロセスを構築することができます。
　また、Redshift内でSQLのみの使用で機械学習が完結するため、作業の効率化も図れます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS QuickSight ★★　分析
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆ビジネスインテリジェンス（BI）サービス
様々なデータソースからのデータ取得

Saasデータソースも可　例）Github、Salesforce

SPICE　AWS QuickSightに内臓された高速なインメモリ型のデータベース。
Amazon QuickSightは、サーバーレスに大容量データを分析し経営に役立てるためのBI（BI：Business Intelligence※）サービスです。
ExcelやCSV、Amazon Redshiftのデータベースなど、様々なデータソースを基にダッシュボードやレポート、グラフを作成してデータを可視化し、
データ分析に役立てます。
※BI（Business Intelligence：ビジネスインテリジェンス） … ビッグデータを収集・分析し、経営に役立てること。
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS OpenSearch　Service（AWS　Elasticsearch　Service） ★★　分析
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

オープンソースの検索および分析ができ、リアルタイムのアプリケーションモニタリング、ログ分析、ウエブサイトなどの幅広い検索

◆CloudWatchログをほぼリアルタイムにストリーミングすることができる
Amazon OpenSearch Service（旧Amazon Elasticsearch Service）は、フルマネージド型の検索・分析エンジンサービスであり、
テキストの全文検索やログ分析などの用途に利用できます。OpenSearch Serviceは▲内部の分散ストレージを活用することで、
大量のデータに対して高速な検索や分析を実現します。
また、高度な検索機能を提供しており、テキストデータのような非構造化データに対しても高速なキーワードおよびフレーズ検索が可能です。
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Lake　Formation ★★　分析
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

安全なデータレイクを短い時間で簡単に作成するマネージドサービス

データウエアハウス
　一般的にRDB形式で目的最適化された状態のデータを保存しています
　
データレイク
　構造／半構造問わずに多様なデータを未加工で保存

S3を使う

Lake Formationを使用することで、これらを一元的に管理することが可能になります。

▲Lake Formationでは、テーブル単位や列単位といった、きめ細かなアクセス制御を行うことができます。
▲これにより、異なるアカウントに対して見せたいデータだけを共有することができます。

Lake Formationでのアクセス制御の方法には「名前付きリソースでのアクセスコントロール」と「タグ（LFタグ）ベースのアクセスコントロール」の2種類があります。
タグベースの方法を使用することで、管理する権限の数を抑えることができます。また、制御対象のリソースが増えた場合でも、
リソースに対してタグを付与するだけで済むため、特に、管理するリソースが多い環境において有効な方法として、AWS公式にも推奨されています。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS EMR ★★　分析
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆Apache　Spark、Apache　hIVE、pRESTOなどのオープンソースフレームワークを使用して、データの処理う、
相互分析、機械学習を行うためのデータプラットﾌｫｰﾑ

Amazon EMRはビッグデータ解析処理のApache Hadoopなどを実行できるサービス
EMRクラスターではデータの保存先にHDFS（Hadoop Distributed File System）を利用する

◆EMRFS（EMR File System）
Amazon S3をEMRクラスターからファイルシステムとして利用できるようにした機能です

Amazon EMRを使用してS3上のデータをHadoopで処理し、結果をHDFSに保存する
EMRは大規模なデータ処理に適しています
Apache Spark　+　AWS EMR
代表的なBIツール（Microsoft ExcelやMicroStrategy）＋AWS EMR　＊標準的なBIツールに対応したEMR

「分散処理」という名の通り、Amazon EMRは3つの役割を持つノード（EC2インスタンス）でクラスターを構成し、処理を分散します。

・マスターノード
　クラスター全体を管理するノード。コアノードおよびタスクノードへ処理を投入したり分散処理の調整を行う。
・コアノード
　演算処理を実行するノード。データを保存するファイルシステムHDFS（Hadoop Distributed File System）を持つ。
・タスクノード（オプション）
　コアノードと同様に演算処理を実行する。ファイルシステムを持たない、演算処理専用のノード。

クラスター内のコアノードまたはタスクノードは、手動、または定めたポリシーなどに従って自動でスケーリングすることができます。
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Apache Spark
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Apache Spark は、オープンソースで高速な汎用目的のクラスターコンピューティングソフトウェアで、ビッグデータの分散処理で広く利用されています。
Apache Spark は、タスクの I/O と実行時間を削減するためにノード全体のメモリで並行コンピューティングを実行することができます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS CloudWatch ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

〇メトクリスとはシステムのパフォーマンスに関するデータのこと

多くのAWSサービスがAWS CloudWatchと統合されているため、ユーザが特に設定せずに収集することができる
EC2で動いているカスタムアプリ等については、メトリクスやログの収集するにあたり、エージェントの構成が必要になる

基本料金無料

CloudWatchメトリクスは無料で利用できますが、▲カスタムメトリクスを利用すると有料となります。

Amazon CloudWatch LogsはAWSサービスやEC2インスタンスのOSやアプリケーションのログを収集し、一元管理するサービスです。
例えば、CloudTrailにおけるAWSサービスの操作ログや、VPCフローログ（VPC利用時のIPトラフィック情報）などを収集することができます。
なお、EC2インスタンスのOSのログを収集するには、対象のEC2インスタンスへ「CloudWatchエージェント」をインストールする必要があります。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS CloudTrail ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
〇AWS上で行われたアクティビティを記録し、監視等が行われるサービス

〇AWSアカウントの作成時にアクティビティになり、手動のセットアップは必要ありません

▲CloudTrail Insightは、リソースプロビジョニングの急増、AWS Identity and Access Management (IAM) 操作の急増、
定期的なメンテナンスアクティビティのギャップなど、異常な運用アクティビティを特定できる機能です。

〇AWS CloudTrailが取得するログはユーザーのログであり、EC2インスタンスのシステムログではない

◆「証跡情報」の登録
・AWS CloudTrailのログは「証跡情報」を登録することによりS3バケットへ保存することができます。
・S3バケットへログを保存することにより、90日を超えてもCloudTrailのログを保存しておくことができます。
・ログを記録するイベントの種類の設定できます

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS CloudFormation ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

・AWSリソースの作成・更新・削除はスタック単位で行われる 


▲CodePipelineはインフラ環境のデプロイには利用できません。
インフラのデプロイ設定にはCloudFormationなどを利用する必要があります。

テスト環境を複数構築したい場合や、新たにアカウントを払い出す際に下準備となる操作
（IAMやセキュリティグループの設定など）をスタックセットとして作成しておく

CloudFormationはインフラの自動作成に優れていますが、Elastic Beanstalkのように簡単に環境を切り替える機能がありません。
また、各AWSサービスやロードバランサーなどのインフラストラクチャ（基盤）技術についての知識が必要で、運用負荷が高くなる

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Systems Manager Session Manager
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
EC2インスタンスへブラウザ（マネジメントコンソール）やAWS CLIからセキュアにログインできる機能です。

〇プライベートサブネットにあるインスタンスへも踏み台サーバーなしで接続が可能です。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Systems Manager(SSMドキュメント) ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
EC2インスタンス、オンプレミスのサーバ、その他のクラウドのサーバなど、各種サーバの管理を自動化するマネージドサービスです。
例）複数のEC2インスタンスのOSパッチ適用を自動化する

SSMドキュメントの形式はJSONもしくはYAML

◆AWS Systems Manager Automationは、AWSリソースへの操作をランブックに従って自動的に実行するサービスです。
ランブックは、自動実行されるワークフローを定義するドキュメントであり、ワークフローは一連のタスクで構成されています。
AWSが提供する定義済みのタスク（例：インスタンスの再起動）のほか、ユーザーがカスタマイズしたワークフローを作成することも可能です。

Systems Manager Automationには、指定したKMSのカスタマーマネージド型のキーの削除をキャンセルする定義済みのランブックがあります。
EventBridgeを利用し、キーの削除をトリガーにランブックの実行、およびSNSトピックを通じて管理者へメールを送信する

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Trusted　Advisor ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
ユーザーのAWS環境をAWSに蓄積されたベストプラクティスと照会することにより、推奨されるアクションのアドバイスを行うサービス
例）AWSにてEC2リザーブドインスタンスを購入し運用しているが、利用状況と購入数が適切かどうかを確認したい。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Config ★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS　config により、AWSリソースの各種構成情報の記録、評価を行う
証明書の有効期限をチェックできる

AWS Configを有効化することにより、例えばセキュリティグループの設定が変更された場合や、
S3バケットを新たに作成した場合にバージョン管理が有効化されているかなど、様々なリソースの設定状況を監査します。
なお、変更があったタイミングでSNSによる通知を受け取ることもできます。

AWS Configのルールはユーザーが作成できます。作成時には、AWSが用意したルールをカスタマイズしたり、
Lambda関数を使用した独自ルールを追加することもできます。
AWSリソースに対して、用途や環境などの管理のためにタグを付与している場合、AWS Configの「required-tags」ルールでは
タグの付与漏れがないかをチェックできます。2022年6月現在では、EC2、ELB、RDS、Redshift、S3などのリソースに対応しています。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
〇コンテナ ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
コンテナは、OS上に隔離されたアプリケーションの実行環境

コンテナオーケストレーションツール：ECS、EKS
コンテナホスト：EC2、Fargate
コンテナレジストリ：ECR　コンテナイメージの保管庫

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Elastic　Container　Service（ECS） ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

〇フルマネージド型のコンテナオーケストレーションサービス

タスク定義

〇モノリシックアプリケーションをコンテナ化したマイクロサービスに分割するのに適したサービス

◆ECSの主要要素に「クラスター」「タスク」「サービス」があります。そのうちの「サービス」はクラスター内で必要なタスク数を維持する機能です。

そのうちの「クラスター」は1つ以上のタスクまたはサービスで構成される論理グループです。
クラスターでは、コンテナが動作するVPCやサブネットなどを設定します。
そのうちの「タスク」はECSで管理するコンテナの実行単位です。
タスク内のコンテナは、実行するコンテナイメージ、CPUやメモリのスペック、タスクロールなどを定義した「タスク定義」
に基づいて起動します。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Elastic　Kubernetes　Service（EKS） ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
〇kubernetesと呼ばれる形式のコンテナー仮想化を実現する

Amazon EKS Anywhere

◆Amazon EKSにおけるCluster Autoscalerの機能
　　Amazon EKSクラスタ内のノードの数を自動的に増減させる

Horizontal Pod Autoscaler (HPA)
 ◆◆ポッドの数を自動的に増減させたい場合「Horizontal Pod Autoscaler (HPA)」を使用するのが適切です。
 HPAは、CPU使用率やメモリ使用量といったメトリクスに基づきポッドの数を調整します。
 なお、HPAを動作させるには、これらのメトリクスデータを収集するために、別途「Metrics Server」と
 いうコンポーネントを導入する必要があります。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Fargate ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
〇サーバータイプのEC2起動タイプと◆サーバレスで実行可能なFargate起動タイプ

〇コンテナホストはFargateを使用したほうが、運用管理のコストを削除できるため、
〇多くの管理はAWS

ECSとEKSの両方を連携

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Elastic Contianer Registry(ECR) ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
フルマネージド型のコンテナレジストリ

ストレージはS3

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　API Gateway ★★★　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
API Gateway はトラフィック管理、認可とアクセスコントロール、モニタリング、API バージョン管理などのAPI管理を実施できます。
そのパフォーマンスとしては最大数十万規模の同時 API コール処理が可能です。
API Gateway は受信したAPI コールと転送データ量に応じて課金される従量課金制サービスです。

〇WebSocket　API

双方向通信

APIエンドポイント

　　https://<api-id>.execute-api.<region-id>.amazonaws.com

エッジ最適化

　最寄りのエッジロケーションにルーティング

ステージ
　　dev test prod

◆Amazon API GatewayはAPIへのアクセスを IAM のアクセス権限によって制御することができます。
そのためには、API の呼び出し等を API コール元にアクセスを許可する IAM ポリシーを作成して設定することが必要です。

API の呼び出しや API キャッシュの更新を API 発信者に許可するには、 IAM ポリシーを作成して、ユーザー、グループ、
またはロールにそのポリシーをアタッチして、権限を付与します。

Amazon API GatewayではIAMアクセスキーではなく、IAMユーザーやIAMロールによる権限管理が必要となります。
▲IAMアクセスキーはAWSユーザーのプログラム認証に利用する認証方式です。CLIツールなどを利用する際に設定します。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Comprehend ★★  機械学習
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
自然言語(NLP)

検出／分析
　（収集されるインサイト）
　　エンティテイ
　　個人識別情報
　　キーフレーズ
　　感情
　　構文
　　トピックモデル
　　言語
Amazon Comprehendはドキュメント内のテキストから価値あるインサイトを導き出し、理解することができる言語識別系のツールです。
Amazon Comprehend API は、エンティティ、キーフレーズ、感情、言語を、アプリケーションで使用できる JSON 形式で出力します。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Textract　★★  機械学習
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
OCR

パソコン上で入力された文字だけでなく手書きの文字も認識

▲日本語　ｘ

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Transcribe　★★  機械学習
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
音声をテキストに文字起こし

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Rekognition　★★  機械学習
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
フルマネージド型の画像・動画分析サービス

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon　Cost　Explorer　★★  
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
コストと使用状況を表示し、さまざまな角度からコストを分析し、レポートを作成することができる

▲コスト分析には役立つが、アラート機能は提供していない
 AWSサービスの利用料金を可視化する。今後の費用の予測と利用状況の詳細な分析を行える
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Aws　Budgets　★★ 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
コストと使用状況をモニタリングし、▲アラート

AWS Budgetsは、コストと使用状況を監視し、設定した金額や使用状況のしきい値に近づいたり超えた場合にアラートやアクションを実行するサービスです。
また、しきい値を超えた時のアクションとして、特定のインスタンスの停止設定やIAMのポリシーやサービスコントロールポリシー (SCP) の付与に
よるリソースの制御が可能で、これによりさらなるコスト発生を抑制できます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
〇Aws　Snow　Family　★★ 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
物理アプライアンスを用いて、ローカル環境に存在する大量のデータを
Ｓ３バスケットへオフライン移行するためのサービス

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Snowball 　　物理的
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

AWS Snowball はデータ転送に利用される様々なタイプの【物理的なSnowballデバイス】を使用して、ペタバイト規模のデータ転送を可能にする
データ移行サービスです。

一般的な高速インターネット回線接続によるデータ移行に比較して、データ転送時のコストは5 分の 1 ほどで済みます。

◆Snowball Edge Compute Optimized は、機械学習、フルモーション動画分析、分析、ローカルコンピューティングスタックなどのユースケースに
　　強力なコンピューティングリソースを提供します。 
　　このデバイスは、S3 互換オブジェクトストレージまたは EBS 互換ブロックボリューム用に 42 TB の使用可能な HDD 容量を提供します。

◆Snowball Edge Storage Optimized は、ブロックボリュームと Amazon S3 互換オブジェクトストレージに 100TB の HDD 容量を提供します。
　　しかしながら、利用可能なボリュームは◆80TBほどです。

＊移行期間中に発生するデータへのアクセスや更新に対応できない
◆◆AWS Snowcone(8TB)　<　Snowball（Snowball Edge Storage Optimized　80TB）　<　Snowmobile(100PBペタバイト)　
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆Aws　Database　Migration Service(DMS)　★★ 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
リレーショナルデータベース、NoSQL等を移行するためのサービス
　S3にも対応

　AWS　Scheme　Conversion　Toolを使用し、スキーマ変換
AWS Database Migration Service（DMS）は、AWSが提供するデータベース移行ツールです。
このサービスを使用すると、異なるプラットフォーム間でデータベースを移行する作業を簡素化できます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆Aws　DataSync　★★ 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
　▲オンプレミスのストレージから
　AWS　EFS、AWS　FSx、S3へのファイルを同期
　あるいは
　AWsストレージ間でファイルを同期するためのサービス
 オンプレミスにDataSyncエージェントをデプロイして、S3バケットへデータ転送する
自動化するデータ移行用サービス

AWS DataSyncは、◆オンプレミスとAWSのストレージサービス間、またはAWSのストレージサービス間で、高速かつ信頼性の高いデータ移行と
同期を提供するマネージドサービスです。移行元としてオンプレミス側のファイルサーバー（例：NFS、SMBなど）もサポートしている点が特徴です。
また、DataSyncはデータ転送に◆特化しているため、設定や運用が容易で、▲スケジュールに基づく定期的なデータ転送も可能です。
さらに、DataSyncはデータ転送量に応じた従量課金制を採用しており、実際に移行するデータ分だけの支払いとなるため、コスト効率も優れています。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Transfer Family (Transfer Family) 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

Transfer FamilyでSFTPサーバーなどを作成すると、ユーザーがアクセスするための接続エンドポイントが設定されます。エンドポイントには、
◆インターネットからアクセス可能な「パブリックエンドポイント」と、VPCでホストされる「VPCエンドポイント」があります。

◆「インターネット向けVPCエンドポイント」は、Elastic IPアドレスをVPCエンドポイントに関連付けることで、インターネットからパブリックサブネットを
経由してアクセスします。
パブリックエンドポイントとは異なり、◆セキュリティグループを使用して接続元を制限することが可能です。

Transfer Familyのパブリックエンドポイントはインターネットからアクセスできますが、◆セキュリティグループを使用できないので
送信元IPアドレスのアクセス制御ができません。SFTPサーバーへのアクセスは承認されたIPアドレスのみに限定するという要件を満たせない
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　AppSync
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
DynamoDBはリアルタイムのデータ集計処理などに最適なNoSQL型のデータベースとなっています。
AppSyncと連携してDynamoDBテーブルのデータをリアルタイムで最新の状態に保つコラボレーションアプリを簡単に構築できます。
 これにより、アプリケーションはAppSyncを介してAmazon DynamoDBテーブルのデータにアクセスしたり、EC2インスタンスやAWS Lambda関数
によるデータ処理を実行するための機能を実装することができます。
したがって、◆DynamoDBとAppSyncを連携して、リアルタイムランキング機能を実装するのが回答となります。

◆AWS AppSyncはサーバーレスな GraphQL と Pub/Sub API を使用してアプリケーション開発を容易に実施できる機能を提供しています。
◆AppSyncは直接DynamoDBテーブルの値を取得・更新・削除することができるため、これを利用して、DynamoDBテーブルのデータを迅速に取得して
リアルタイムランキング機能を実装することが可能です。
◆リアルタイム行動分析やランキング処理にはAppSyncを利用することが最適です
Lambda関数は初めからコーディングする必要があるため、AppSyncを利用する方が効率的にランキング処理アプリケーションを実装できます。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CloudHSM
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

▲AWS CloudHSMでは、専用のハードウェアデバイスを用いて暗号化鍵を生成・管理します。
貸し出されるハードウェアは世界的な暗号化ハードウェアの規格（FIPS 140-2 のレベル 3）で認証済みのため、信頼性の高さが強みです。
▲CloudHSMでは鍵の生成や保管・削除などのライフサイクル管理はユーザー自身が行います。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
IPフローティング
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
障害発生時にダウンタイムをなくすため、Elastic　IPを自動で付け替える機能

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Resource Access Manager（RAM）
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Resource Access Manager（RAM）は、AWSリソースを複数のAWSアカウントで共有できるサービスです。
AWS RAMは追加料金なしで利用できます。
共有可能なAWSリソースには、Amazon EC2、AWS VPC、Amazon Transit Gatewayなどがあります。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CloudWatch Container Insights
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CloudWatch Container Insights を設定することで、コンテナ化されたアプリケーションとマイクロサービスのメトリクスと
ログを収集して可視化することができます。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆SNI（Server Name Indication）
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ELBからドメイン名が複数あるインスタンスへ暗号化通信を転送する
暗号化通信で使用するサーバー証明書をパブリックIPアドレスではなくドメイン名によって判断する技術です。
SNIに対応したELBに複数のサーバー証明書を導入すると、ELBが宛先ドメイン名から適切なサーバー証明書を判断してサーバーへ通信を転送します。
SNIはALBとNLBが対応しています。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆S3の「Transfer Acceleration」機能
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
S3 Transfer Accelerationは、ユーザーからS3バケットへ最適化したネットワークルートを経由してデータを転送する機能です。
ユーザーと地理的に近いエッジロケーション(*)から高パフォーマンスなAWSネットワークを経由してS3バケットへアクセスするため、
遅延の発生やデータ損失などのリスクを少なくします。
(*) エッジロケーション ... AZとは異なるAWSデータセンターで、AZよりも世界中に数多く配置されている

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Compute Optimizer
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
コンピューティングリソースの設定と使用状況を分析し、コスト最適化とパフォーマンス向上のための推奨事項を提供します。
対象となるリソースには、EC2インスタンス、EC2 Auto Scalingグループ、EBSボリューム、Lambda関数、Fargate利用のAmazon ECSなどが
含まれます。

Compute Optimizerを使用すれば、ECSタスク定義のCPUとメモリ設定に関する最適な推奨事項を得ることができ、
コストの最適化とパフォーマンスの改善が期待できます
@@@@@@
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆Amazon Managed Streaming for Apache Kafka（◆MSK）
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Apache Kafkaは、大量のストリーミングデータを効率的に取り扱い、リアルタイムで処理するのに適した分散システムです。
例えば、WebサイトのアクセスログやIoTデバイスのデータをリアルタイムで収集・分析したり、ユーザーの行動データを収集して
パーソナライズされたコンテンツやシステムを構築するなどのユースケースがあります。

Amazon Managed Streaming for Apache Kafka (Amazon MSK) は、Apache KafkaをAWS上で効率的に運用できるようにするための
フルマネージドサービスです。AWSがKafkaクラスターの設定、管理、監視などの運用タスクを担うため、運用負荷が大幅に軽減され、
ユーザーはアプリケーションの開発に集中できます。また、需要に応じてクラスターのスケールアップおよびスケールダウンを
動的に行うことで、効率的なデータ処理が可能です。
データのレプリケーションとマルチアベイラビリティゾーン展開により、システムの高可用性が確保されます。
さらに、Apache KafkaのネイティブAPIと互換性があるため、既存のKafkaクライアントやアプリケーションを変更せずに利用でき、
他のAWSサービスとも簡単に統合できます。
参考：AWS Kinesis Data　Analytics（現：◆Amazon　Maneged　Service　For　APache　Flink）
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS X-Ray
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS X-Rayは、◆アプリケーション◆の動作に関するデータを収集・分析できるサービスです。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Control Towerのデータレジデンシーガードレールについて
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Control Towerはベストプラクティスに基づいた、セキュアなマルチアカウント環境のセットアップを自動化するサービス

ガードレールとは、AWSにおけるベストプラクティスに基づいた構成や設定、ルールの組み合わせが事前定義されたもので、
AWS Control Tower内で提供されています。管理者は、セキュリティやコンプライアンスの要件にあわせてこれらを選択し適用することで、
各アカウントに対する設定や適用するルールのばらつきが生じることを防ぎ、統制のとれたマルチアカウント環境を容易に展開することができます。

データレジデンシーガードレールは、データの保存や処理ができるリージョンに制限をかけることを主な目的としたガードレールです。
このガードレールを用いることで、特定のリージョン以外の使用を禁止したり、VPCをインターネットから隔離するといった設定が可能です。
これにより、企業のコンプライアンス要件や国際的な法規制などに準拠した環境を構築することができます。
複数のAWSアカウントに対して、データの保存や処理ができるリージョンを制限できる

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Network Firewall　VPC向けのファイアウォール機能を提供するサービス
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Network Firewallは、VPC向けのファイアウォール機能を提供するマネージドサービスです。
侵入防止システム（IPS）やドメイン名によるトラフィックのフィルタリングなど、セキュリティグループやネットワーク
ACLよりもさらに高度な機能を備えています。
Network Firewallは、VPC上のアウトバウンド及びインバウンド両方のトラフィックを検査できます。
インターネット上の特定のドメイン名を含むURLへのアクセスのみを許可したり、特定の送信元からのトラフィック以外は
全てブロックするなど、きめ細かな通信の制御が可能です。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆Amazon VPC Lattice
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Amazon VPC Latticeは、複数のVPCやアカウントにまたがるアプリケーション間の通信を簡素化し、一元的に管理するフルマ
ネージドサービスです。
HTTP、HTTPS、gRPCなどアプリケーション層の通信プロトコルをサポートしており、VPC Latticeを介して各アプリケーション
を関連付けることで接続を実現します。
特に、マイクロサービスアーキテクチャと呼ばれる、小型のサービスが集まったアプリケーションにおいて、複雑なネット
ワーク構成を効率的に管理するのに有効です。

VPC Latticeにはサービスディスカバリー機能が組み込まれており、他のサービスの位置情報（例えば、IPアドレスやポート番号）
を動的に検出できます。
これにより、◆マイクロサービスアーキテクチャの複雑なネットワーク構成を効率的に管理することができます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
13.1 ストレージとパフォーマンス
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
　パフォーマンス
▲　　　Cold HDD < スループット最適化HDD　< 汎用SDD　＜　プロビジョンドIOPS SSD

+++++++++++++++++++++++++++++++++++++++++++++++++++++++
14.3 コンピューティングとコスト最適化
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
使用率が予測できる場合、予測の使用量を満たすCompute　Saving Plansを購入することで、コスト最適化

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Data Pipeline 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
AWS Data Pipeline は、様々なAWSデータベースやストレージ間のデータの移動と変換を自動化するサービスです。
AWS Data Pipeline はデータ駆動型のワークフローを定義して、タスクの正常な完了をトリガーにして、データ変換と送信
タスクを実行できます。
AWS Data Pipeline はDynamoDBに設定することが可能であり、定期的なデータ取得タスクを設定させることができます。
AWS Data Pipelineは、データの移動や変換を自動化するサービスです。

◆例えば、Amazon S3からDynamoDBへデータを取り込んだり、RDSからRedshiftへのデータコピーなどを毎週日曜に行う、
といった運用ができます。
S3やRDS、Redshiftなど、データの型が異なるストレージまたはデータベースであっても、変換および移行を行います。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
APIリクエストに対する一時的な高負荷発生に備えて、Amazon API Gateway APIの処理性能を向上させるためには、
◆APIゲートウェイのスロットリング制限設定とキャッシュを有効化することが必要です。◆

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ストレージ最適化インスタンスの１つである◆i3enインスタンスはAmazon EC2 において GB あたりの料金が
最も安価なストレージ最適化インスタンスです。
このインスタンスタイプは数万 IOPS もの低レイテンシーなランダム I/O オペレーションに向いてます。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　◆VPCフローログ
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
EC2インスタンスのネットワークインターフェースに対するVPCフローログを有効化することで、
EC2インスタンスのネットワークインターフェイスを介して行き来する IPトラフィック情報をキャプチャできます。
このデータをCloudWacth Logsに集約することで、EC2インスタンスへのトラフィックログに対する中央管理が可能となります。
CloudWatchエージェントをEC2インスタンスにインストールすることで、Amazon EC2 インスタンス内部のOSとオンプレミスサーバーからの
詳細ログを収集します。
これにより、ログの中央管理が達成できます。
Amazon CloudWatch LogsまたはS3へ保存されます。VPCフローログをKinesis Data Streamsに直接送信することはサポートされていません。
ログの保存先として、S3はCloudWatch Logsと比較してコストが安く、大量のデータを長期間保存するのに最適です。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース Accept-Encoding: gzip
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
オリジンからファイルを取得するときに、CloudFrontは各エッジロケーションでファイルを圧縮することができます。
ビューワーが◆リクエストヘッダーに Accept-Encoding: gzip を含めるようのリクエストするとCloudFront はファイルを圧縮して、
ファイルを供給するように設定できます。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
複数のAWSアカウントを管理している組織において、チームごとに利用可能なサービスやアクションの制限をしたい。
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
OU（Organizational Unit）単位にサービスコントロールポリシー（SCP）を設定する

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　あるS3のバケットは複数のAWSアカウントで共用している。バケットの所有者は、他のユーザーがアップロードした
オブジェクトも含めてバケット内のすべてのオブジェクトに対するフルコントロール権限を持つようにしたい。
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
S3のオブジェクトはアップロードしたAWSアカウントが所有権を持ちます。
バケットを複数のAWSアカウントで共有している場合も、バケットの所有者とは違うAWSアカウントがアップロードしたオブジェクトの所有権は
アップロードしたAWSアカウントが持つので、バケットの所有者はオブジェクトに対してフルコントロール権限がありません。
バケットの所有者にフルコントロール権限を付与するには、アップロードしたAWSアカウントがオブジェクトのアップロード時に、
バケットの所有者にフルコントロール権限を付与する設定をします。

バケットポリシーは、オブジェクトアップロード時にフルコントロール権限をバケットの所有者に設定することを強制できます。
これによりバケットには、バケット所有者がフルコントロール権限を持つオブジェクトのみアップロードできるようになります。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆◆VPCリンク
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆API Gatewayからプライベートサブネット内のAWSリソースへアクセスさせたい場合は「VPCリンク」を作成します。
これにより、APIとプライベートサブネット内のリソースとの間で、インターネットを経由しないセキュアな通信が可能になります。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
DFSR（Distributed File System Replication）を備えたファイル共有を利用したいとき、適切なアプローチはどれか。
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
FSx For Windowsファイルサーバーを利用する
分散ファイル システム レプリケーション (DFS レプリケーション) 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　Amazon CloudWatchにおいて、EC2インスタンスの標準メトリクスとして取得できるもの 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ｘディスクの空き容量
ｘメモリ使用量
〇ディスクの読み取り・書き込み量
〇CPU使用率
〇ネットワーク使用率

メモリ使用量やディスクの空き容量などのインスタンス内部の情報はAWSでは取得できないため、ユーザーがカスタムメトリ
クスとして取得する必要があります。
EC2インスタンスのメモリ使用量をAmazon CloudWatchの監視対象に加えたい

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
◆AWS Service Catalog
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CloudFormationテンプレートを製品として登録し、他のAWSユーザーへ共有できる
AWS Service Catalogは、主にCloudFormationテンプレートを製品として登録し、他のAWSユーザーへ共有できるサービスです。
共有先のAWSユーザーは、セルフサービスで製品からAWS環境をデプロイ（構築）できます。
▲製品の管理者は、製品のバージョンや、製品がいつ・誰に使用されたかを一元的に管理できるので、共有するAWS環境の一
貫性とコンプライアンスを維持できます。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　ある企業では、テスト環境で運用しているEC2インスタンスを本番環境へコピーする必要がある。
本番環境用のAWSアカウントは別に存在する。また、EC2インスタンスのEBSボリュームは暗号化して運用している。
最も安全にコピーする方法はどれか。
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
あるAWSアカウントで暗号化されたリソースを別のAWSアカウントで復号したい場合、KMS（Key Management Service）の暗号化鍵を
複数のAWSアカウントで使用できます（クロスアカウント）。暗号化されたAMIやデータベースのスナップショットなどを他のAWSアカウントと
共有する際に利用します。
鍵を共有するには、共有する対象のAWSアカウントIDを鍵の使用者として追加します。
共有できる鍵は▲カスタマーマネージド型のKMSキーのみです。
AWS▲マネージド型のKMSキーはキーポリシーを編集できないため他のAWSアカウントと共有できません。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　ある企業が、Amazon RDSのAurora MySQLデータベースを運用している。
このデータベースには重要な顧客情報が格納されており、AWS KMSのカスタマーマネージド型のキーを用いて暗号化されている。
同社では新たなプロジェクトを進めるにあたり、パートナー企業のAWSアカウントにこのデータベースのスナップショットを
共有する必要が生じた。
データベースには機密情報が含まれるため、パートナー企業に対して安全に共有する方法が求められている。
運用上のオーバーヘッドを抑えつつこの要件を満たす最適なアプローチは
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
暗号化に使用しているKMSキーのキーポリシーの設定で、パートナー企業のAWSアカウントに対してキーの使用を許可し、
スナップショットを共有する

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　ある企業では、内部的にAmazon Redshiftへアクセスするアプリケーションを検討している。
アプリケーションがRedshiftへアクセスするためのIDおよびパスワードはアプリケーション内にハードコーディングせず、
また、定期的に変更されるようにしたい。
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Secrets Managerには、シークレットを安全に管理するために、定期的にシークレットを更新する「ローテーション」機能があります。
スケジュールに従って、Secrets Managerはローテーション用のLambda関数を自動的に呼び出します。
アプリケーションは、更新されたシークレットでその後の認証を行います。
▲なお、Amazon RDS、Amazon Redshiftなど一部のサービスはSecrets Managerがローテーション用のテンプレートを用意しています。
これら以外のサービス向けには、独自でローテーション関数を作成する必要があります。

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　ある製造企業は、オンプレミスのデータセンターにSMBサーバーを設置しており、少量の製造データを
FSx for Windowsファイルサーバーに定期的にバックアップする必要がある。
以下の要件を満たし、最もコストパフォーマンスが良く、設定および運用の手間が少ないソリューションは
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
オンプレミスにDataSyncエージェントを導入して、FSx for Windowsファイルサーバーにデータを定期的に同期させる

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　あるアプリケーションがプライベートサブネットにあるEC2インスタンス上で動作している。
アプリケーションはVPCエンドポイント経由でAmazon S3バケットに保存されているデータにアクセスする。
ソリューションアーキテクトは、S3バケットへのアクセス元をVPCエンドポイントに限定し、VPCエンドポイントは特定のS3バケットへの
アクセスのみを許可したいと考えている。
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
VPCエンドポイントポリシーで、特定のS3バケットへの通信のみを許可する
S3のバケットポリシーで、特定のVPCエンドポイントからの通信のみを許可する

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　ある小規模のソフトウェア開発会社は、インターネットサービスプロバイダーが提供するDNSサービスのパフォーマ
ンス低下に悩まされている。
この問題が最近、クライアントへのサービス提供に影響を及ぼし始めたため、会社はAWSが提供する、より高度なマネージド
DNSサービスへの移行を決断した。
システムの信頼性を高め、将来のスケーラビリティの要求に応えるために、どのような措置を講じればよいか。 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
▲Route 53のパブリックホストゾーンを設定し、現在のプロバイダーからの全DNSレコードをインポートする。
DNSレコードの移行後、ドメインのネームサーバーをRoute 53に変更する

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ケース　ある会社は、会社のWebサイトをAWS上で構築した。WebサイトはAmazon CloudFrontから配信されるようになっている。
CloudFrontではHTTPS通信に対応するために、独自のSSL/TLS証明書をAWS Certificate Manager (ACM)にインポートして設定した。
運用担当者は、証明書の有効期限切れを防止するために、有効期限が切れる45日前に通知されることを望んでいる。
要件を満たすための方法は、次のうちどれか。
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ACMから発行した証明書は有効期限が切れる前に自動で更新されますが、インポートした証明書はユーザーが更新しなければなりません。

AWS Configは、AWSリソースの設定を管理し、記録・評価するサービスです。A
WSリソースの設定がいつ変更されたかを記録し、変更がルールに準拠したものでない場合には「非準拠」として記録されます。
AWS Configでは、ACMで管理している証明書の有効期限を対象としたルールを作成できます。
ユーザーが指定した日数以内に有効期限が切れる場合、ルールが非準拠となります。
ルールが非準拠になったことをトリガーにしたAmazon EventBridgeのイベントルールを作成し
、Amazon SNSから通知することで、設問の要件を満たせます。
